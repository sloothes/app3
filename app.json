{
	"metadata": {
		"type": "App"
	},
	"project": {
		"vr": false,
		"cache": false,
		"editable": false,
		"debugMode": true,
		"shadows": true
	},
	"gbfunctions": [],
	"jslibraries": [],
	"stylesheets": [],
	"scripts": {
		"3020AE50-A7A0-4AAE-91A5-6C5821F68FC1": [
			{
				"name": "service-worker.js",
				"source": "// ServiceWorker.\n\nif ( \"serviceWorker\" in navigator ) {\n\n\ttry {\n\n\t\tnavigator.serviceWorker.register( \"sw.js\" );\n\n\t} catch ( error ) {\n\n\t\tdebugMode && console.log( error );\n\n\t}\n\n}\n\n"
			},
			{
				"name": "Config.js",
				"source": "var storage = {\n\n\t\"app/cache\":false,\n\t\"app/debug\": true,\n\n};\n\napp.config = new Config( \"app\" );\n\nfunction Config( name ) {\n\n\tif ( window.localStorage[ name ] === undefined ) {\n\n\t\twindow.localStorage[ name ] = JSON.stringify( storage );\n\n\t} else {\n\n\t\tvar data = JSON.parse( window.localStorage[ name ] );\n\n\t\tfor ( var key in data ) {\n\n\t\t\tstorage[ key ] = data[ key ];\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tgetKey: function ( key ) {\n\n\t\t\treturn storage[ key ];\n\n\t\t},\n\n\t\tsetKey: function () { // key, value, key, value ...\n\n\t\t\tfor ( var i = 0, l = arguments.length; i < l; i += 2 ) {\n\n\t\t\t\tstorage[ arguments[ i ] ] = arguments[ i + 1 ];\n\n\t\t\t}\n\n\t\t\twindow.localStorage[ name ] = JSON.stringify( storage );\n\t\t\tdebugMode && console.log( \"[\" + /\\d\\d\\:\\d\\d\\:\\d\\d/.exec( new Date() )[ 0 ] + \"]\", \"app config saved to LocalStorage.\" );\n\n\t\t},\n\n\t\tclear: function () {\n\n\t\t\tdelete window.localStorage[ name ];\n\n\t\t}\n\n\t};\n\n};\n"
			},
			{
				"name": "Geometries",
				"source": "Geometries = []; // array with json geometry items.\n\nGeometries.toJSON = toJSON.bind( Geometries );\nGeometries.fromJSON = fromJSON.bind( Geometries );\nwindow.skinnedfromGeometry = skinnedfromGeometry.bind( window );\n\n//\tReturns \"Geometries\" stringified.\n\nfunction toJSON(){\n\treturn JSON.stringify( Geometries );\n}\n\n//\tCreates an array of geometries json items.\n\nfunction fromJSON( data ){\n//\tif ( !validator && !validator.isJSON( data ) ) return;\n\treturn JSON.parse( data );\n}\n\n//\tReturns a skinned mesh from \"Geometries\" item.\n\nfunction skinnedfromGeometry( json ){\n\n\tif ( json === undefined ) return;\n\n\tvar loader = new THREE.JSONLoader();\n\tvar object = loader.parse(json);\n\tif ( object.geometry === undefined ) return;\n\n\tvar geometry;\n\n\tgeometry = object.geometry;\n\tgeometry.name = json.name;\n\tgeometry.computeFaceNormals();\n\tgeometry.computeVertexNormals();\n\tgeometry.computeBoundingBox();\n\tgeometry.computeBoundingSphere();\n\tgeometry.sourceType = \"ascii\";\n\tgeometry.sourceFile = JSON.stringify( json );\n//\tdebugMode && console.log({\"geometry\": geometry});\n\n\tfor ( var i = 0; i < object.materials.length; i++ ){\n\t\tobject.materials[i].skinning = true;\n\t}\n\n\tvar material;\n\n\tif ( object.materials.length == 1 ) {\n\t\tmaterial = object.materials[0];\n\t} else if ( object.materials.length > 1 ) {\n\t\tmaterial = new THREE.MeshFaceMaterial(object.materials);\n\t} else {\n\t\tmaterial = new THREE.MeshStandardMaterial({skinning:true});\n\t}\n\n\tif ( material === undefined ) return;\n//\tdebugMode && console.log({\"material\": material});\n\n\tvar skinned;\n\n\tskinned = new THREE.SkinnedMesh( geometry, material );\n\tif ( skinned === undefined ) return;\n\n\tskinned.renderDepth = 1;\n\tskinned.frustumCulled = false;\n\tskinned.position.set( 0, 0, 0 );\n\tskinned.rotation.set( 0, 0, 0 );\n\tskinned.scale.set( 1, 1, 1 );\n\tskinned.visible = true;\n\n//\tdebugMode && console.log({\"skinned\": skinned});\n\n\treturn skinned;\n\n}\n"
			},
			{
				"name": "Materials - Textures",
				"source": "Images = [];\t\t// array of <img> elements.\nTextures = [];\t\t// array of THREE.Textures.\nMaterials = [];\t\t// array of THREE.Materials.\n\n//\tMove array item from one position to another position.\n//\thttps://stackoverflow.com/questions/5306680/move-an-array-element-from-one-array-position-to-another.\n\nwindow.array_move = array_move.bind( window );\nwindow.materialtoJSON = materialtoJSON.bind( window );\nwindow.materialfromJSON = materialfromJSON.bind( window );\nwindow.texturetoJSON = texturetoJSON.bind( window );\nwindow.texturefromJSON = texturefromJSON.bind( window );\n\nfunction array_move( array, from_index, to_index ) {\n\n\tif (to_index >= array.length) {\n\t\tvar k = to_index - array.length + 1;\n\t\twhile (k--) {\n\t\t\tarray.push(undefined);\n\t\t}\n\t}\n\n\tarray.splice(to_index, 0, array.splice(from_index, 1)[0]);\n\n}\n\n//  MATERIAL TO JSON.\n\n//  materialtoJson.js (v1.7)\n//  Return a promise with the \n//  material json object resolved.\n\n\nfunction materialtoJSON( material ){\n\n\t//  MULTIMATERIAL.\n\n\tif ( material.type == \"MultiMaterial\" || material.materials ) {\n\n\t//  multimaterial to json.\n\n\t\tvar multjson = {\n\n\t\t\t_id: \"\",\n\t\t\ttype: material.type,\n\t\t\tuuid: material.uuid || THREE.Math.generateUUID(),\n\n\t\t};\n\n\n\t//  materials to json.\n\n\t\tmultjson.materials = [];\n\n\t\tfor ( var i = 0; i < material.materials.length; i++ ){\n\n\t\t\tmultjson.materials.push( materialtoJSON( material.materials[i] ) );\n\n\t\t}\n\n\n\t\tdebugMode && console.log( \"multimaterial to json:\", multjson );\n\n\t\treturn multjson;\n\n\t}\n\n\n\t//  MATERIAL.\n\n\tvar json = {};\n\n\tfor ( var name in material ){\n\n\t\tif ( material[ name ] == undefined ) continue;         // important!\n\t\tif ( material[ name ] instanceof Function ) continue;  // important!\n\t\tif ( typeof(material[name]) === \"function\" ) continue; // important!\n\n\t\tswitch( name ){\n\n\t\t\tcase \"defines\":\n\t\t\tcase \"program\":\n\t\t\tcase \"_listeners\":\n\t\t\tcase \"needsUpdate\":\n\t\t\tcase \"_needsUpdate\":\n\t\t\tcase \"__webglShader\":\n\t\t\tbreak;\n\n\n\t\t//  name, _id, uuid.\n\n\t\t\tcase \"name\":\n\t\t\t\tjson.name = material.name;\n\t\t\tbreak;\n\n\t\t\tcase \"_id\":\n\t\t\t\tjson._id = material._id || ObjectId();\n\t\t\tbreak;\n\n\t\t\tcase \"uuid\":\n\t\t\t\tjson.uuid = material.uuid || THREE.Math.generateUUID();\n\t\t\tbreak;\n\n\n\t\t//  texture to json.\n\n\t\t\tcase \"map\":\n\t\t\tcase \"bumpMap\":\n\t\t\tcase \"alphaMap\":\n\t\t\tcase \"normalMap\":\n\t\t\tcase \"emissiveMap\":\n\t\t\tcase \"displacementMap\":\n\t\t\tcase \"metalnessMap\":\n\t\t\tcase \"roughnessMap\":\n\t\t\tcase \"specularMap\":\n\t\t\tcase \"lightMap\":\n\t\t\tcase \"aoMap\":\n\n\t\t\t\tif ( !(material[ name ] instanceof THREE.Texture) ) {\n\t\t\t\t\tthrow name + \" is not instance of THREE.Texture\";\n\t\t\t\t}\n\n\t\t\t\tjson[ name ] = texturetoJSON( material[ name ] );\n\n\t\t\tbreak;\n\n\n\t\t//  three color to hex.\n\n\t\t\tcase \"color\":\n\t\t\tcase \"emissive\":\n\t\t\tcase \"specular\":\n\n\t\t\t\tif ( !(material[ name ] instanceof THREE.Color) ) {\n\t\t\t\t\tthrow name + \" is not instance of THREE.Color\";\n\t\t\t\t}\n\n\t\t\t\tjson[ name ] = material[ name ].getHex();\n\n\t\t\tbreak;\n\n\n\t\t//  vector2 to array.\n\n\t\t\tcase \"normalScale\":\n\n\t\t\t\tif ( !(material[ name ] instanceof THREE.Vector2) ) {\n\t\t\t\t\tthrow name + \" is not instance of THREE.Vector2\";\n\t\t\t\t}\n\n\t\t\t\tjson[ name ] = material[ name ].toArray();\n\n\t\t\tbreak;\n\n\n\n\t\t\tcase \"envMap\":\n\t\t\t\t//  TODO: cube texture.\n\t\t\tbreak;\n\n\n\t\t\tdefault:\n\t\t\t\tjson[ name ] = material[ name ];\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn json;\n\n}\n\n\n\n//  TEXTURE TO JSON.\n//  Return a promise resolved \n//  with the texture json object.\n\nfunction texturetoJSON( texture ){\n\n\tvar json = {};\n\n\tfor (var name in texture ){\n\n\t\tif ( texture[ name ] == undefined ) continue;\n\t\tif ( texture[ name ] instanceof Function ) continue;\n\t\tif ( typeof(texture[name]) === \"function\" ) continue;\n\n\t\tswitch (name){\n\n\t\t\tcase \"_listeners\":\n\t\t\tbreak;\n\n\t\t//  uuid.\n\n\t\t\tcase \"uuid\":\n\t\t\t\tjson[ name ] = texture[ name ] || THREE.Math.generateUUID();\n\t\t\tbreak;\n\n\n\t\t//  vector2 to array.\n\n\t\t\tcase \"offset\":\n\t\t\tcase \"repeat\":\n\t\t\t\tjson[ name ] = texture[ name ].toArray();\n\t\t\tbreak;\n\n\n\t\t//  image to json.\n\n\t\t\tcase \"image\":\n\t\t\t\tjson[ name ] = texture.sourceFile || getDataURL( texture[ name ] ); // important!\n\t\t\tbreak;\n\n\n\t\t\tdefault:\n\t\t\t\tjson[ name ] = texture[ name ];\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn json;\n\n}\n\n\n//  IMAGE TO JSON.\n//  Return an image object.\n\nfunction imagetoJSON( image ){\n\n\treturn {\n\t\tuuid: THREE.Math.generateUUID(),\n\t\tsrc: image.src || getDataURL( image ),\n\t};\n\n}\n\n\n//  TEXTURE IMAGE TO JSON.\n//  Return an image object.\n\nfunction textureImagetoJSON( texture ){\n\n\treturn {\n\t\tuuid: THREE.Math.generateUUID(),\n\t\tsrc: texture.sourceFile || texture.image.src || getDataURL( texture.image ),\n\t};\n\n}\n\n//  getDataURL.js\n\nfunction getDataURL( image ) {\n\n\tvar canvas;\n\n\tif ( image.toDataURL !== undefined ) {\n\n\t\tcanvas = image;\n\n\t} else {\n\n\t\tcanvas = document.createElementNS( \"http://www.w3.org/1999/xhtml\", \"canvas\" );\n\t\tcanvas.width = image.width;\n\t\tcanvas.height = image.height;\n\t\tcanvas.getContext( \"2d\" ).drawImage( image, 0, 0, image.width, image.height );\n\n\t}\n\n\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\treturn canvas.toDataURL( \"image/jpeg\", 0.6 );\n\n\t} else {\n\n\t\treturn canvas.toDataURL( \"image/png\" );\n\n\t}\n\n}\n\n\n\n//  MATERIAL FROM JSON.\n//  materialfromJson.js (v1.7)\n\nfunction materialfromJSON( json ){\n\n//  MULTIMATERIAL.\n\n\tif ( json.materials && json.materials.length ) {\n\n\t\tvar materials = [];\n\n\t\tfor ( var i = 0; i < json.materials.length; i++ ){\n\n\t\t\tmaterials.push( materialfromJSON( json.materials[i] ) );\n\n\t\t}\n\n\n\t//  Create multimaterial.\n\n\t\tvar multimaterial = new THREE.MeshFaceMaterial(materials);\n\n\t\tmultimaterial.uuid = json.uuid || THREE.Math.generateUUID();\n\n\t\treturn multimaterial;\n\n\t}\n\n//  MATERIAL.\n\n\tvar options = {};\n\n\tfor (var name in json){\n\n\t\tif ( json[ name ] == undefined ) continue; // important!\n\n\t\tswitch (name){\n\n\t\t\tcase \"_id\":\n\t\t\tcase \"meta\":\n\t\t\tbreak;\n\n\n\t\t//  uuid.\n\n\t\t\tcase \"uuid\":\n\t\t\t\toptions.uuid = json.uuid || THREE.Math.generateUUID();\n\t\t\tbreak;\n\n\n\t\t//  texture from json.\n\n\t\t\tcase \"map\":\n\t\t\tcase \"aoMap\":\n\t\t\tcase \"bumpMap\":\n\t\t\tcase \"alphaMap\":\n\t\t\tcase \"lightMap\":\n\t\t\tcase \"normalMap\":\n\t\t\tcase \"emissiveMap\":\n\t\t\tcase \"specularMap\":\n\t\t\tcase \"metalnessMap\":\n\t\t\tcase \"roughnessMap\":\n\t\t\tcase \"displacementMap\":\n\n\t\t\t\toptions[ name ] = texturefromJSON( json[ name ] );\n\n\t\t\tbreak;\n\n\n\t\t//  three color to hex.\n\n\t\t\tcase \"color\":\n\t\t\tcase \"emissive\":\n\t\t\tcase \"specular\":\n\n\t\t\t\toptions[ name ] = new THREE.Color();\n\t\t\t\toptions[ name ].setHex( json[ name ] );\n\n\t\t\tbreak;\n\n\n\t\t//  vector2 from array.\n\n\t\t\tcase \"normalScale\":\n\n\t\t\t\toptions[ name ] = new THREE.Vector2();\n\t\t\t\toptions[ name ].fromArray( json[ name ] );\n\n\t\t\tbreak;\n\n\n\t\t\tcase \"envMap\":\n\t\t\t\t//  TODO: cube texture.\n\t\t\tbreak;\n\n\n\t\t\tdefault:\n\t\t\t\toptions[ name ] = json[ name ];\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn new THREE[ options.type ](options);\n\n}\n\n\n//  TEXTURE FROM JSON (v1.7)\n\t\nfunction texturefromJSON( json ){\n\n\tvar loader = new THREE.TextureLoader()\n\tloader.setCrossOrigin(\"\"); // important!\n\tvar url = json.sourceFile || json.image || \"https://i.imgur.com/ODeftia.jpg\";\n\tvar texture = loader.load( url );\n\ttexture.sourceFile = url;\n\n\tfor ( var name in json ){\n\n\t\tswitch (name){\n\n\t\t\tcase \"meta\":\n\t\t\tcase \"image\":\n\t\t\tcase \"sourceFile\":\n\t\t\tbreak;\n\n\t\t//  array to vector2.\n\n\t\t\tcase \"offset\":\n\t\t\tcase \"repeat\":\n\n\t\t\t\tif ( json[ name ].length != 2) break;\n\n\t\t\t\ttexture[ name ] = new THREE.Vector2();\n\t\t\t\ttexture[ name ].fromArray( json[ name ] );\n\n\t\t\tbreak;\n\n\n\t\t//  wrapS & wrapT.\n\n\t\t\tcase \"wrap\":\n\n\t\t\t\tif ( json[ name ].length != 2) break;\n\t\t\t\tif ( !( json[ name ] instanceof Array ) ) break;\n\n\t\t\t\ttexture.wrapS = json[ name ][0];\n\t\t\t\ttexture.wrapT = json[ name ][1];\n\n\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\ttexture[ name ] = json[ name ];\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn texture;\n\n}\n\n\n//  IMAGE FROM JSON (v1.7)\n\nfunction imagefromJSON( json, onLoad, onProgress, onError ){\n\n\tvar url = json.src || json.url || json.data;\n\tif ( url === undefined ) return new Image();\n\n\tvar loader = new THREE.ImageLoader()\n//  Use cors origin \"anonymous\" to avoid tainted image.\n\tloader.setCrossOrigin(\"anonymous\"); // important!\n\treturn loader.load( url, onLoad, onProgress, onError );\n\n}\n\n\n//\tGet material.\n\nMaterials.getByName = getByName.bind( Materials );\nMaterials.getByUuid = getByUuid.bind( Materials );\n\n//\tMaterials to json.\n//\tReturns an array with json material items.\n\nMaterials.toJSON = function(){\n\n\treturn this.map(function( material ){\n\t\treturn materialtoJSON( material );\n\t});\n\n}\n\n//\tMaterials from json.\n//\tConverts json items to materials\n//\tand return a new Materials array.\n\nMaterials.fromJSON = function( array ){\n\n\tif ( !Array.isArray( array ) ) return;\n\n\treturn array.map(function( json ){\n\t\treturn materialfromJSON( json );\n\t});\n\n}\n\nMaterials.dispose = function(){\n\n\tthis.map( function ( material ){\n\n\t\tif ( material && material.materials && material.materials.length ) {\n\n\t\t\tfor ( var i = 0; i < material.materials.length; i++ ) {\n\t\t\t\tmaterial.materials[i] && dispose( material.materials[i] );\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tmaterial && !material.materials && dispose( material );\n\n\t\t}\n\n\t});\n\n\treturn;\n}\n\n//\tGet texture.\n\nTextures.getByName = getByName.bind( Textures );\nTextures.getByUuid = getByUuid.bind( Textures );\n\n//\tTextures to json.\n//\tReturns an array with json texture items.\n\nTextures.toJSON = function(){\n\n\treturn Textures.map(function( material ){\n\t\treturn texturetoJSON( material );\n\t});\n\n}\n\n//\tTextures from json.\n//\tConverts json items to materials\n//\tand returns a new Textures array.\n\nTextures.fromJSON = function( array ){\n\n\tif ( !Array.isArray( array ) ) return;\n\n\treturn array.map(function( json ){\n\t\treturn texturefromJSON( json );\n\t});\n\n}\n\nTextures.dispose = function(){\n\n\tthis.map( function( texture ){\n\t\ttexture.dispose();\n\t});\n\n\treturn;\n}\n\nfunction getByName( name ){\n\treturn this.find(function(item){\n\t\treturn item.name == name;\n\t});\n}\n\nfunction getByUuid( uuid ){\n\treturn this.find(function(item){\n\t\treturn item.uuid == uuid;\n\t});\n}\n\nfunction dispose( material ){\n\n\tmaterial && material.map && material.map.dispose && material.map.dispose();\n\tmaterial && material.bumpMap && material.bumpMap.dispose && material.bumpMap.dispose();\n\tmaterial && material.alphaMap && material.alphaMap.dispose && material.alphaMap.dispose();\n\tmaterial && material.normalMap && material.normalMap.dispose && material.normalMap.dispose();\n\tmaterial && material.emissiveMap && material.emissiveMap.dispose && material.emissiveMap.dispose();\n\tmaterial && material.roughnessMap && material.roughnessMap.dispose && material.roughnessMap.dispose();\n\tmaterial && material.metalnessMap && material.metalnessMap.dispose && material.metalnessMap.dispose();\n\tmaterial && material.displacementMap && material.displacementMap.dispose && material.displacementMap.dispose();\n\tmaterial && material.lightMap && material.lightMap.dispose && material.lightMap.dispose();\n\tmaterial && material.envMap && material.envMap.dispose && material.envMap.dispose();\n\tmaterial && material.aoMap && material.aoMap.dispose && material.aoMap.dispose();\n\tmaterial && material.dispose && material.dispose();\n\n}\n"
			},
			{
				"name": "AW3D (v0.4.5)",
				"source": "AW3D = { VERSION: \"0.4.5\" };\n\n//  Player Holder.\n\nAW3D.PlayerHolder = function ( name ){\n\tvar holder = new THREE.Object3D();\n\tholder.position.set( 0, 1, 0 );\n\tholder.name = name || \"PLAYER HOLDER\";\n\treturn holder;\n};\n\n//  Player Holder Helper.\n\nAW3D.PlayerHolderHelper = function ( name ){\n\tvar helper = new THREE.BoxHelper();\n\thelper.name = name || \"HOLDER HELPER\";\n\thelper.visible = true;\n\treturn helper;\n};\n\n//  Player Controller Direction pointer.\n\nAW3D.DirectionPointer = function ( name ){\n\tvar geometry = new THREE.CylinderGeometry( 0, 1, 20, 12 );\n//  BE CAREFULL: is not \"mesh.rotation.y = -Math.PI\".\n\tgeometry.rotateX( Math.PI / 2 );  //  important!\n\tvar material = new THREE.MeshStandardMaterial({color:0x00ff00});\n\tvar pointer = new THREE.Mesh(geometry, material);\n\tpointer.position.set(0, 15, 0);\n\tpointer.name = name || \"PLAYER DIRECTION\";\n\tpointer.visible = true;\n\treturn pointer;\n};\n\n//  Player Sphere.\n\nAW3D.PlayerSphere = function ( name ){\n\tvar sphere = new THREE.Mesh(\n\t\tnew THREE.SphereGeometry( 15, 8, 4 ),\n\t\tnew THREE.MeshBasicMaterial({ \n\t\t\tcolor: 0xff0000,  \n\t\t\twireframe: true,\n\t\t})\n\t); \n\tsphere.position.y = 12;\n\tsphere.name = name || \"PLAYER SPHERE\";\n\tsphere.visible = true;\n\treturn sphere;\n};\n\n//  Player pointer.\n\nAW3D.PlayerPointer = function ( name ){\n\tvar geometry = new THREE.CylinderGeometry( 0, 1, 20, 12 );\n//  BE CAREFULL: is not \"mesh.rotation.y = -Math.PI\".\n\tgeometry.rotateX( Math.PI / 2 );  //  important!\n\tvar material = new THREE.MeshNormalMaterial();\n\tvar pointer = new THREE.Mesh(geometry, material);\n\tpointer.position.set(0, 40, 0);\n\tpointer.name = name || \"PLAYER POINTER\";\n\tpointer.visible = true; // debugMode || false;\n\treturn pointer;\n};\n\n\n//  OutfitManager.js\n\nAW3D.OutfitManager = function(){\n\n\tvar self = this;\n\n\t//  requires \"signals.min.js\".\n\n\tvar Signal = signals.Signal;\n\tthis.added = new Signal();\n\tthis.removed = new Signal();\n\tthis.changed = new Signal();\n\tthis.genderChanged = new Signal();\n\tthis.genderIsChanging = new Signal();\n\n\tthis.eventTimeout = undefined;\n\tthis.direction = new THREE.Object3D();\n\n\tthis.gender = {\n\t\tmale    : false,\n\t\tfemale  : false,\n\t\tshemale : false,\n\t\ttrans   : false,\n\t};\n\n\tthis.genitals = { \n\t\tvagina   : false,\n\t\tpenis    : false,\n\t\tattached : false,\n\t};\n\n\tthis.layers = [\n\t\t\"body\",\n\t\t\"head\",\n\t\t\"face\",\n\t\t\"hairs\",\n\t\t\"upper\", // chest.\n\t\t\"lower\", // hips.\n\t\t\"torso\", // (chest & hips).\n\t\t\"arms\",\n\t\t\"legs\",\n\t\t\"hands\",\n\t\t\"feet\",\n\t\t\"genitals\", \n\t\t\"skeleton\",\n\t];\n\n\tthis.slots = [\n\t\t\"skeleton\",\n\t\t\"body\",\n\t\t\"hairs\",\n\t\t\"eyes\",\n\t\t\"glasses\",\n\t\t\"hat\",\n\t\t\"stockings\",\n\t\t\"underwears\",\n\t\t\"costume\",\n\t\t\"tshirt\",\n\t\t\"skirt\",\n\t\t\"trousers\",\n\t\t\"skirt\",\n\t\t\"dress\",\n\t\t\"shoes\",\n\t\t\"coat\",\n\t\t\"penis\", \n\t\t\"vagina\",\n\t];\n\n\tthis.stickers = [\n\t\t\"skin\",\n\t\t\"makeup\",\n\t\t\"tattoo\",\n\t\t\"bodypaint\",\n\t\t\"neck\",\n\t\t\"chest\",\n\t\t\"belly\",\n\t\t\"upperlimb\",\n\t\t\"arm\",\n\t\t\"forearm\",\n\t\t\"wrist\",\n\t\t\"hand\",\n\t\t\"lowerlimb\",\n\t\t\"thigh\",\n\t\t\"leg\",\n\t\t\"foot\",\n\t\t\"butt\",\n\t\t\"back\",\n\t\t\"scapula\",\n\t\t\"lumbar\",\n\t];\n\n\tthis.attachments = [\n\t\t\"helmet\",\n\t\t\"face\",\n\t\t\"mask\",\n\t\t\"teeth\",\n\t\t\"beard\",\n\t\t\"eyelash\",\n\t\t\"glasses\",\n\t\t\"ears\",\n\t\t\"belly\",\n\t\t\"gun\",\n\t\t\"wepon\",\n\t\t\"knife\",\n\t\t\"sword\",\n\t\t\"bistol\",\n\t\t\"watch\",\n\t\t\"jewelry\",\n\t\t\"earings\",\n\t\t\"necklace\",\n\t\t\"bracelet\",\n\t\t\"bag\",\n\t\t\"handbag\",\n\t\t\"cape\",\n\t\t\"coat\",\n\t\t\"horn\",\n\t\t\"tail\",\n\t\t\"penis\", \n\t];\n\n\tthis.AnimationsHandler = [];\n\n    //  Outfit.AnimationsHandler is an simple array where local\n    //  player.outfit keeps the AW3D.AnimationHandler instances.\n\n\tthis.AnimationsHandler.reset = function(){\n\t\tthis.length = 0; // reset array.\n\t};\n\n\tthis.AnimationsHandler.stop = function(){\n\t\tthis.forEach( function( anim ){\n\t\t\tif (!!anim ) anim.stop();\n\t\t});\n\t};\n\n\tthis.AnimationsHandler.jump = function(){\n\t\tthis.forEach( function( anim ){\n\t\t\tif (!!anim ) anim.jump();\n\t\t});\n\t};\n\n\tthis.AnimationsHandler.play = function(){\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tthis.forEach( function( anim ){\n\t\t\t\tif (!!anim ) anim.play(name);\n\t\t\t});\n\t\t}\n\t};\n\n\tthis.AnimationsHandler.weightOff = function(){\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tthis.forEach( function( anim ){\n\t\t\t\tif (!!anim ) anim.weightOff(name);\n\t\t\t});\n\t\t}\n\t};\n\n\tthis.AnimationsHandler.weightOn = function(){\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tthis.forEach( function( anim ){\n\t\t\t\tif (!!anim ) anim.weightOn(name);\n\t\t\t});\n\t\t}\n\t};\n\n\tthis.AnimationsHandler.fadeIn = function(){\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tthis.forEach( function( anim ){\n\t\t\t\tif (!!anim ) anim.fadeIn(name);\n\t\t\t});\n\t\t}\n\t};\n\n\tthis.AnimationsHandler.fadeOut = function(){\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tthis.forEach( function( anim ){\n\t\t\t\tif (!!anim ) anim.fadeOut(name);\n\t\t\t});\n\t\t}\n\t};\n\n\tthis.AnimationsHandler.refresh = function(){\n\n\t\tthis.stop();\n\t\tthis.fill(null);\n\t\tthis.reset();\n\n\t\tvar gender = self.getGender();\n\n\t\tself.slots.forEach( function(name, i){\n\n\t\t\tif ( !!self[ name ] ){\n\n\t\t\t\tvar handler = new AW3D.AnimationHandler( self[ name ], gender );\n\n\t\t\t\tself.AnimationsHandler.push( handler );\n\t\t\t}\n\t\t});\n\n\t\tthis.play(\"idle\");\n\t};\n\n//  Outfit EventDispatcher.\n\tObject.assign( this, THREE.EventDispatcher.prototype );  // important!\n\n};\n\n\nAW3D.OutfitManager.prototype = {\n\n\tconstructor: AW3D.OutfitManager,\n\n\trefresh: function(){\n\t\tthis.AnimationsHandler.refresh();\n\t},\n\n\n\tget: function(){\n\n\t\tvar results = {};\n\n\t\tvar _get = ( arg ) => {\n\n\t\t\tif ( typeof( arg ) == \"string\" ) {\n\t\t\t\tif ( !!this[arg] ) results[arg] =  this[arg];\n\t\t\t}\n\n\t\t\tif ( arg instanceof Array ) {\n\t\t\t\targ.forEach( ( key ) => {\n\t\t\t\t\t_get( key );\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tif ( arguments.length > 0 ){\n\n\t\t\tfor (var i in arguments){\n\n\t\t\t\tif ( !arguments[i] ) continue;\n\n\t\t\t\t_get( arguments[i] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.slots.forEach( (name) => { _get( name ); });\n\n\t\t}\n\n\t\treturn results;\n\n\t},\n\n\tset: function(){\n\t//  Set \"this.slot\" but not add to \"this.direction\".\n\n\t\tfor (var arg in arguments){\n\n\t\t\tif (!arguments[arg]) continue;\n\n\t\t\tvar name = Object.keys(arguments[arg])[0];\n\t\t\tvar asset = Object.values(arguments[arg])[0];\n\n\t\t\tif ( !name || name == null || !asset ) continue;\n\t\t\tif ( !!this[ name ] ) this.remove( name );\n\n\t\t\tthis[ name ] = asset;\n\n\t\t//  Create an animation handler for this outfit slot.\n\t\t\tvar handler = new AW3D.AnimationHandler( this[ name ], this.getGender() );\n\n\t\t//  Add animation handler.\n\t\t\tthis.AnimationsHandler.push( handler );\n\n\t\t}\n\n\t\t//  Send \"change\" event only when last \n\t\t//  add has been completed (delay:100ms).\n\n\t\tvar msec = 100;\n\t\tvar self = this;\n\t\tclearTimeout( this.eventTimeout );\n\t\tthis.eventTimeout = setTimeout( function(){\n\t\t\tself.dispatchEvent( {type:\"change\"} );\n\t\t\tself.changed && self.changed.dispatch();\n\t\t}, msec);\n\n\t\treturn this;\n\t},\n\n\tadd: function(){\n\n\t\tfor (var arg in arguments) {\n\n\t\t\tif (!arguments[arg]) continue;\n\n\t\t\tvar name = Object.keys(arguments[arg])[0];\n\t\t\tvar asset = Object.values(arguments[arg])[0];\n\n\t\t\tif ( !name || name == null || !asset ) continue;\n\t\t\tif ( this[ name ] ) this.remove( name );  // important!\n\n\t\t\tthis[ name ] = asset;\n\n\t\t//  Create an animation handler for this outfit slot.\n\t\t\tvar handler = new AW3D.AnimationHandler( this[name], this.getGender() );\n\n\t\t\tif ( this.AnimationsHandler.length ) {\n\n\t\t\t//  Copy each action properties of first animation handler.\n\t\t\t\tvar masterHandler = this.AnimationsHandler[0];\n\n\t\t\t\tfor ( var action in handler.actions ) {\n\n\t\t\t\t\tif ( !action ) break;\n\n\t\t\t\t\thandler.actions[action].loop = masterHandler.actions[action].loop;\n\t\t\t\t\thandler.actions[action].weight = masterHandler.actions[action].weight;\n\t\t\t\t\thandler.actions[action].timeScale = masterHandler.actions[action].timeScale;\n\t\t\t\t\thandler.actions[action].currentTime = masterHandler.actions[action].currentTime;\n\t\t\t\t\thandler.actions[action].interpolationType = masterHandler.actions[action].interpolationType;\n\n\t\t\t\t\tif ( masterHandler.actions[action].isPlaying ) {\n\t\t\t\t\t\thandler.actions[action].play( masterHandler.actions[action].currentTime );\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t//  Add animation handler.\n\t\t\t\tthis.AnimationsHandler.push( handler );\n\n\t\t\t} else {\n\n\t\t\t\t//  Add animation handler.\n\t\t\t\tthis.AnimationsHandler.push( handler );\n\t\t\t\t//  Play idle.\n\t\t\t\tthis.AnimationsHandler.play(\"idle\");\n\n\t\t\t}\n\n\t\t//  Add outfit item to scene.\n\t\t\tthis.direction.add( this[ name ] );\n\n\t\t//\tUpdate textures.\n\t\t\tif (this[ name ].material && !this[ name ].material.materials) {\n\n\t\t\t//  Single material.\n\n\t\t\t\tObject.keys(this[ name ].material).filter( (key) => {\n\t\t\t\t\treturn this[ name ].material[ key ] instanceof THREE.Texture;\n\t\t\t\t}).forEach( (key) => {\n\t\t\t\t\tthis[ name ].material[ key ].needsUpdate = true;\n\t\t\t\t});\n\n\t\t\t\tthis[ name ].material.needsUpdate = true;\n\n\t\t\t} else if (this[ name ].material.materials && this[ name ].material.materials.length) {\n\n\t\t\t//  Multimaterial.\n\n\t\t\t\tthis[ name ].material.materials.forEach(function(material){\n\n\t\t\t\t\tObject.keys(material).filter(function(key){\n\t\t\t\t\t\treturn material[ key ] instanceof THREE.Texture;\n\t\t\t\t\t}).forEach(function(key){\n\t\t\t\t\t\tmaterial[ key ].needsUpdate = true;\n\t\t\t\t\t});\n\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t}\n\n\t\t//  this.AnimationsHandler.refresh(); \n\n\t\tthis.dispatchEvent( {type:\"add\"} );\n\t\tthis.added && this.added.dispatch();\n\n\t\t//  Send \"change\" event only when last \n\t\t//  add has been completed (delay:100ms).\n\n\t\tvar msec = 100;\n\t\tvar self = this;\n\t\tclearTimeout( this.eventTimeout );\n\t\tthis.eventTimeout = setTimeout( function(){\n\t\t\tself.dispatchEvent( {type:\"change\"} );\n\t\t\tself.changed && self.changed.dispatch();\n\t\t}, msec);\n\n\t\treturn this;\n\t},\n\n\tremove: function(){\n\n\t\tif ( arguments.length == 0 ) return;\n\n\t\tfor (var arg in arguments){\n\n\t\t\tif ( !arguments[arg] ) continue;\n\t\t\tif ( !this.slots.includes( arguments[arg] ) ) continue;\n\n\t\t\tvar name = arguments[arg];\n\n\t\t//  Remove from scene (does not throw error).\n\t\t\tthis.direction.remove( this[ name ] );\n\n\t\t//  Dispose textures.\n\n\t\t\tif ( this[ name ] ) {\n\n\t\t\t\tif (this[ name ].material && !this[ name ].material.materials) {\n\n\t\t\t\t\t//  Single material.\n\n\t\t\t\t\tObject.keys(this[ name ].material).filter( (key) => {\n\t\t\t\t\t\treturn this[ name ].material[ key ] instanceof THREE.Texture;\n\t\t\t\t\t}).forEach( (key) => {\n\t\t\t\t\t\tthis[ name ].material[ key ].dispose();\n\t\t\t\t\t\t//  DO NOT NULL/DELETE TEXTURE.  important!\n\t\t\t\t\t});\n\n\t\t\t\t\tthis[ name ].material.dispose();\n\n\t\t\t\t} else if (this[ name ].material.materials && this[ name ].material.materials.length) {\n\n\t\t\t\t\t//  Multimaterial.\n\n\t\t\t\t\tthis[ name ].material.materials.forEach(function(material){\n\n\t\t\t\t\t\tObject.keys(material).filter(function(key){\n\t\t\t\t\t\t\treturn material[ key ] instanceof THREE.Texture;\n\t\t\t\t\t\t}).forEach(function(key){\n\t\t\t\t\t\t\tmaterial[ key ].dispose();\n\t\t\t\t\t\t\t//  DO NOT NULL/DELETE TEXTURE. important!\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tmaterial.dispose();\n\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t//  Dispose geometry.\n\t\t\tif ( this[ name ] ) this[ name ].geometry.dispose();\n\n\t\t//  Dispose bones texture. !important\n\t\t\tif ( this[ name ] && this[ name ].skeleton  )\n\t\t\t\tthis[ name ].skeleton.boneTexture.dispose();\n\n\t\t//  Remove the animation handler.\n\n\t\t\tif ( this.AnimationsHandler.length ) {\n\n\t\t\t\t//  Find handler index.\n\t\t\t\tvar index = this.AnimationsHandler.findIndex((handler) => {\n\t\t\t\t\treturn handler.mesh == this[ name ];\n\t\t\t\t});\n\n\t\t\t\t//  Keep in mind \"splice()\" uses \"zero\" \n\t\t\t\t//  and \"negative\" indexes also. // danger!\n\t\t\t\t//  debugMode && console.log({\"index\": index});\n\n\t\t\t\tif ( index != undefined && index > -1 ) {\n\n\t\t\t\t//  Get and remove handler from AnimationsHandler.\n\t\t\t\t\tvar handler = this.AnimationsHandler.splice(index, 1)[0];\n\n\t\t\t\t//  Stop handler animations.\n\t\t\t\t\thandler.stop();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t//  Delete slot.\n\t\t\tdelete this[ name ];\n\n\t\t}\n\n\t\t//  this.AnimationsHandler.refresh(); \n\n\t\tthis.dispatchEvent( {type:\"remove\"} );\n\t\tthis.removed && this.removed.dispatch();\n\n\t\t//  Send \"change\" event only when last \n\t\t//  remove has been completed (delay:100ms).\n\n\t\tvar msec = 100;\n\t\tvar self = this;\n\t\tclearTimeout( this.eventTimeout );\n\t\tthis.eventTimeout = setTimeout( function(){\n\t\t\tself.dispatchEvent( {type:\"change\"} );\n\t\t\tself.changed && self.changed.dispatch();\n\t\t}, msec);\n\n\t\treturn this;\n\t},\n\n\tremoveAll: function() { \n\n\t\tthis.slots.forEach( ( name ) => {\n\t\t\tif ( this[ name ] ) this.remove( name );\n\t\t});\n\n\t\treturn this;\n\n\t},\n\n\tremoveFromScene: function(){\n\n\t\tif ( arguments.length == 0 ) {\n\n\t\t\tthis.slots.forEach( ( name ) => {\n\t\t\t\tthis.remove( name );\n\t\t\t});\n\n\t\t} else {\n\n\t\t\tfor (var arg in arguments){\n\t\t\t\tthis.remove( arguments[arg] );\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveTexture: function( outfit, map, index ){\n\n\t\t//  outfit: outfit slot name (e.g \"body\", \"hair\", \"dress\", etc.)\n\t\t//  map   : material map name (e.g. \"map\", \"bumpMap\", \"normalMap\", etc.)\n\t\t//  index : material index of multimaterial (\"null\" for simple material).\n\n\t\tif ( !this[ outfit ] ) return;\n\t\tif ( !this[ outfit ].material ) return;\n\n\t\t//  Material.\n\n\t\tif ( index == null || isNaN(index) || typeof(index) != \"number\" ) {\n\n\t\t\tif ( !this[ outfit ].material[ map ] ) return;\n\n\t\t\tthis[ outfit ].material[ map ].dispose();\n\t\t\tthis[ outfit ].material[ map ] = null;\n\t\t\tthis[ outfit ].material.needsUpdate = true;\n\n\t\t\treturn;\n\t\t}\n\n\t\t//  MultiMaterial.\n\n\t\tif ( typeof(index) == \"number\" && index > -1 ) {\n\n\t\t\tif ( !this[ outfit ].material.materials ) return;\n\t\t\tif ( !this[ outfit ].material.materials[ index ] ) return;\n\t\t\tif ( !this.body.material.materials[ index ][ map ] ) return;\n\n\t\t\tthis[ outfit ].material.materials[ index ][ map ].dispose();\n\t\t\tthis[ outfit ].material.materials[ index ][ map ] = null;\n\t\t\tthis[ outfit ].material.materials[ index ].needsUpdate = true;\n\n\t\t\treturn;\n\t\t}\n\t},\n\n\tsetGender: function( gender ){\n\n\t\tvar self = this;\n\n\t\tif ( this.getGender(gender) ) return this;\n\n\t//\tif ( gender =-= undefined ) { what }\n\t//\tif ( !Object.keys(this.gender).includes(gender) ) { what }\n\n\t\tObject.keys(this.gender).forEach( function( name ){\n\t\t\tself.gender[ name ] = ( name == gender );\n\t\t});\n\n\t\tthis.genderChanged.dispatch(); // important!\n\n\t//  Outfit direction scale. (object3D)\n\n\t\tswitch ( this.getGender() ){\n\n\t\t\tcase \"male\":\n\t\t\t\tthis.direction.scale.set(1, 1, 1);\n\t\t\tbreak;\n\n\t\t\tcase \"trans\":\n\t\t\tcase \"female\":\n\t\t\tcase \"shemale\":\n\t\t\t\tthis.direction.scale.set(0.95, 0.95, 0.95);\n\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthis.direction.scale.set(1, 1, 1);\n\t\t\tbreak;\n\t\t}\n\n\t\tthis.AnimationsHandler.refresh();\n\n\t\treturn this;\n\t},\n\n\tgetGender: function(){\n\n\t\tvar self = this;\n\n\t\tif (arguments.length > 0){\n\n\t\t\treturn self.gender[ arguments[0] ];\n\n\t\t} else {\n\n\t\t\treturn Object.keys(this.gender).find( function( name ){\n\t\t\t\treturn self.gender[ name ];\n\t\t\t});\n\n\t\t}\n\t},\n\n\tresetGender: function(){\n\n\t\tvar self = this;\n\n\t\tObject.keys(this.gender).forEach( function( name ){\n\t\t\tself.gender[ name ] = false;\n\t\t});\n\n\t\tthis.direction.scale.set(1, 1, 1);\n\t\tthis.AnimationsHandler.refresh();\n\n\t\treturn this;\n\t},\n\n\tgetPose: function( name ){\n\n\t\tvar name = name || \"body\";\n\t\tif ( !this[ name ] ) return;\n\t\tif ( !this.slots.includes( name ) ) return;\n\n\t\tvar pose = [];\n\n\t\tfor (var i in this[ name ].skeleton.bones) {\n\t\t\tvar key = {}; // {\"pos\":[], \"rot\":[], \"scl\":[]};\n\t\t\tkey.pos = this[ name ].skeleton.bones[i].position.toArray();\n\t\t\tkey.rot = this[ name ].skeleton.bones[i].quaternion.toArray();\n\t\t\tkey.scl = this[ name ].skeleton.bones[i].scale.toArray();\n\t\t\tpose.push(key);\n\t\t}\n\n\t\treturn pose;\n\t},\n\n\n\ttoJSON: function(){\n\n\t\tvar data = {};\n\n\t\tif ( arguments.length == 0 ) {\n\n\t\t\tfor (var i = 0; i < this.slots.length; i++) {\n\n\t\t\t\tvar name = this.slots[i];\n\n\t\t\t\tif ( !name ) continue;\n\t\t\t\tif ( !this[ name ] ) continue;\n\t\t\t\tif ( !this.slots.includes( name ) ) continue;\n\n\t\t\t\tdata[ name ] = {};\n\t\t\t\tdata[ name ].name      = name;\n\t\t\t\tdata[ name ].visible   = this[ name ].visible;\n\t\t\t\tdata[ name ].scale     = this[ name ].scale.toArray();\n\t\t\t\tdata[ name ].geometry  = this[ name ].geometry.sourceFile;\n\t\t\t\tdata[ name ].material  = materialtoJSON( this[ name ].material );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tfor (var i = 0; i < arguments.length; i++){\n\n\t\t\t\tvar name = arguments[i];\n\n\t\t\t\tif ( !name ) continue;\n\t\t\t\tif ( !this[ name ] ) continue;\n\t\t\t\tif ( !this.slots.includes( name ) ) continue;\n\n\t\t\t\tdata[ name ] = {};\n\t\t\t\tdata[ name ].name      = name;\n\t\t\t\tdata[ name ].visible   = this[ name ].visible;\n\t\t\t\tdata[ name ].scale     = this[ name ].scale.toArray();\n\t\t\t\tdata[ name ].geometry  = this[ name ].geometry.sourceFile;\n\t\t\t\tdata[ name ].material = materialtoJSON( this[ name ].material );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.getGender() ) \n\t\t\tdata.gender = this.getGender();\n\n\t\tvar data = JSON.stringify( data );\n\n\t\tif ( data === \"{}\" ) \n\t\t\treturn null;\n\t\telse \n\t\t\treturn JSON.parse( data );\n\n\t},\n\n//  fromJSON (v2.2).\n\n\tfromJSON: function( json ){\n\n\t\t//  Make a copy of json. important!\n\n\t\tif ( typeof(json) == \"object\" ) {\n\n\t\t\ttry {\n\n\t\t\t\tvar json = JSON.stringify( json ); // string copy of json.\n\n\t\t\t} catch(err) { throw err; }\n\n\t\t}\n\n\t\t//  requires \"validation.js\".\n\n\t\tif ( typeof(json) == \"string\" ) {\n\n\t\t\tif ( !validator.isJSON( json ) ) {\n\t\t\t\tthrow \"Validation Error: json not valid\";\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow \"Type Error: json is not string type.\";\n\n\t\t}\n\n\n\t\tvar json = JSON.parse( json ); // (now is a json copy).\n\n\n\t\tvar self = this;\n\n\t\t//  Set gender first.\n\n\t\tthis.removeAll();          // important!\n\t\tvar gender = json.gender;  // important!\n\t\tthis.setGender( gender );  // important!\n\n\t\t//  Clear gender of json.\n\t\tdelete json.gender; // (is a copy of json).\n\n\t\t//  ORDER DOES MATTER for transparency:\n\t\t//   Order in localPlayer.outfit.direction.children array DOES MATTER.\n\t\t//  So we must deliver the outfit.direction.children array with the following order:\n\t\t//  [skeleton, body, eyes, hairs, stockings, underwears, tshirt, trousers, costume, dress, shoes, coat]\n\n\t\tvar orderMap = [];\n\n\t\t(function(){\n\t\t\tif (json.skeleton) orderMap.push(\"skeleton\");\n\t\t\tif (json.body) orderMap.push(\"body\");\n\t\t\tif (json.eyes) orderMap.push(\"eyes\");\n\t\t\tif (json.glasses) orderMap.push(\"glasses\");\n\t\t\tif (json.hairs) orderMap.push(\"hairs\");\n\t\t\tif (json.hat) orderMap.push(\"hat\");\n\t\t\tif (json.stockings) orderMap.push(\"stockings\");\n\t\t\tif (json.underwears) orderMap.push(\"underwears\");\n\t\t\tif (json.costume) orderMap.push(\"costume\");\n\t\t\tif (json.tshirt) orderMap.push(\"tshirt\");\n\t\t\tif (json.trousers) orderMap.push(\"trousers\");\n\t\t\tif (json.skirt) orderMap.push(\"skirt\");\n\t\t\tif (json.dress) orderMap.push(\"dress\");\n\t\t\tif (json.shoes) orderMap.push(\"shoes\");\n\t\t\tif (json.coat) orderMap.push(\"coat\");\n\t\t})();\n\n\t\tdebugMode && console.log({\"orderMap\": orderMap});\n\n\t\tvar outfit = {};\n\t\tvar promises = [];\n\n\t\tfor (var i = 0; i < orderMap.length; i++){\n\n\t\t\tpromises.push(\n\t\t\t\tnew Promise(function(resolve, reject){\n\n\t\t\t\t\tvar object = {};\n\t\t\t\t\tvar sortIndex = i;\n\t\t\t\t\tvar key = orderMap[i];\n\n\t\t\t\t\tobject.name      = json[ key ].name;\n\t\t\t\t\tobject.visible   = json[ key ].visible;\n\t\t\t\t\tobject.material  = json[ key ].material;\n\t\t\t\t\tobject.geometry  = json[ key ].geometry; // (stringified json or url)\n\n\t\t\t\t//  Scale.\n\t\t\t\t\tvar vector = new THREE.Vector3();\n\t\t\t\t\tobject.scale = vector.fromArray( json[ key ].scale );\n\n\t\t\t\t//\tdebugMode && console.log( \"object:\", object );\n\n\t\t\t\t//  Material.\n\t\t\t\t\tvar material = materialfromJSON( object.material );\n\n\t\t\t\t//\tif ( validator.isJSON( object.geometry ) ) {\n\n\t\t\t\t\tvar loader = new THREE.JSONLoader();\n\t\t\t\t\tvar geometry = loader.parse( object.geometry ).geometry; // important!\n\n\t\t\t\t\tgeometry.name = object.geometry.name;\n\t\t\t\t\tgeometry.computeFaceNormals();\n\t\t\t\t\tgeometry.computeVertexNormals();\n\t\t\t\t\tgeometry.computeBoundingBox();\n\t\t\t\t\tgeometry.computeBoundingSphere();\n\t\t\t\t\tgeometry.sourceFile = object.geometry;  // (stringified json) important!\n\t\t\t\t//\tdebugMode && console.log( \"geometry:\", geometry );\n\n\t\t\t\t\tvar skinned = new THREE.SkinnedMesh( geometry, material );\n\n\t\t\t\t\tskinned.renderDepth = 1;\n\t\t\t\t\tskinned.frustumCulled = false;\n\t\t\t\t\tskinned.position.set( 0, 0, 0 );\n\t\t\t\t\tskinned.rotation.set( 0, 0, 0 );\n\t\t\t\t\tskinned.scale.copy( object.scale );\n\t\t\t\t\tskinned.castShadow = true;\n\t\t\t\t\tskinned.name = object.name;\n\t\t\t\t\tskinned.sortIndex = sortIndex;\n\n\t\t\t\t\tvar obj = {};\n\t\t\t\t\tobj[ key ] = skinned;\n\t\t\t\t\tresolve( obj );\n\n\t\t\t\t\toutfit[ key ] = skinned;\n\t\t\t\t\treturn;\n\n\t\t\t\t//\t}\n\t\t\t\t\t\n\t\t\t\t//\tresolve( null );\n\t\t\t\t\t\t\t\n\t\t\t\t}).catch(function(err){\n\n\t\t\t\t\tconsole.error(err);\n\t\t\t\t\treturn null; // important!\n\n\t\t\t\t}) // end of promise,\n\t\t\t); // end push.\n\t\t}// end for.\n\n\t\tdebugMode && console.log(\"promises:\", promises);\n\n\t\treturn Promise.all(promises).then(function(results){\n\t\t\tdebugMode && console.log(\"results:\", results);\n\n\t\t\t//  cleanup.\n\t\t\tvar results = results.filter(Boolean); // important!\n\t\t\tdebugMode && console.log(\"cleaned results:\", results);\n\n\t\t\t//  add outfit.\n\t\t\twhile (results.length) {\n\t\t\t\tself.add( results.shift() );\n\t\t\t}\n\n\t\t}).then(function(){\n\t\t\tdebugMode && console.log(\"outfit:\", outfit);\n\t\t\treturn outfit;\n\t\t});\n\n\t},\n\n\n\t//  Outfit DNA is an object that contains the outfit data that needed to\n\t//  create the player oufit anywhere remotly. It is player outfit assets\n\t//  in transfered structure ( aka like .toJSON() ).\n\t//\n\t//  .toDNA(); .fromDNA(dna); Usage:\n\t//      dna = localPlayer.outfit.toDNA();\n\t//      player = new Player();\n\t//      player.outfit = new AW3D.Outfit(player);\n\t//      player.outfit.fromDNA( dna );\n\n\t//\t.toDNA, .fromDNA (v2).\n\t//\trequires \"rawinflate.js, rawdeflate.js, and validator.js\"\n\n\ttoDNA: function(){\n\n\t\treturn encode( JSON.stringify( this.toJSON() ) );\n\n\t\tfunction encode( string ) {\n\t\t\tif ( !!window.RawDeflate ) {\n\t\t\t\treturn window.btoa( RawDeflate.deflate( string ) );\n\t\t\t} else {\n\t\t\t\treturn string;\n\t\t\t}\n\t\t}\n\n\t},\n\n\tfromDNA: function( dna ){\n\n\t\t//  Validation.\n\n\t\tif ( typeof(dna) == \"string\" ) {\n\n\t\t\tif ( validator.isBase64( dna ) ) {\n\n\t\t\t\treturn new Promise( (resolve, reject) => {\n\t\t\t\t\tvar json = JSON.parse( decode( dna ) );\n\t\t\t\t\tresolve( this.fromJSON(json) );\n\t\t\t\t}).catch( function(err){ \n\t\t\t\t\tconsole.error(err);\n\t\t\t\t\tthrow err; \n\t\t\t\t});\n\n\t\t\t} else if ( validator.isJSON( dna ) ) {\n\n\t\t\t\treturn new Promise( (resolve, reject) => {\n\t\t\t\t\tvar json = JSON.parse( dna );\n\t\t\t\t\tresolve( this.fromJSON(json) );\n\t\t\t\t}).catch( function(err){ \n\t\t\t\t\tconsole.error(err);\n\t\t\t\t\tthrow err; \n\t\t\t\t});\n\n\t\t\t} else {\n\n\t\t\t\treturn new Promise( (resolve, reject) => {\n\t\t\t\t\tvar err = \"DNA is not valid.\";\n\t\t\t\t\tconsole.error( \"Error: \" + err );\n\t\t\t\t\treject( \"Validation Error: \" + err );\n\t\t\t\t\t//  throw Error( err );\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn new Promise( (resolve, reject) => {\n\t\t\t\tvar err = \"Unsupported DNA type: \" + typeof(dna);\n\t\t\t\tconsole.error( \"Error: \" + err );\n\t\t\t\treject( \"Validation Error: \" + err );\n\t\t\t\t//  throw Error( err );\n\t\t\t});\n\n\t\t}\n\n\t\tfunction decode( string ) {\n\t\t\tif ( !!window.RawDeflate ) {\n\t\t\t\treturn RawDeflate.inflate( window.atob( string ) );\n\t\t\t} else {\n\t\t\t\treturn string;\n\t\t\t}\n\t\t}\n\n\t},\n\n};\n\n\n//  AW3D AnimationHandler.js\n\n//  Reset THREE.AnimationHandler.animations array.\nTHREE.AnimationHandler.animations.length = 0;\nAnimationManager = THREE.AnimationHandler;\n\nAW3D.AnimationHandler = function ( mesh, gender ) {\n\n\tthis.mesh = mesh;\n\tthis.gender = gender; // important!\n\tthis.actions = {};\n\n//  This create the animations of skinned mesh. \n\n\tthis.reloadActions(); // important!\n\n};\n\n\nAW3D.AnimationHandler.prototype = {\n\n\tconstructor: AW3D.AnimationHandler,\n\n\tfindAction: function(action){\n\t\t//  returns new array with resutls.\n\t\treturn THREE.AnimationHandler.animations.filter( function(animation){\n\t\t\treturn (animation == action); // boolean.\n\t\t}); \n\t},\n\n\tfindByUuid: function( name ){\n\t\t//  returns new array with resutls.\n\t\treturn THREE.AnimationHandler.animations.filter( function(animation){\n\t\t\treturn (animation.uuid == this.actions[ name ].uuid); // boolean.\n\t\t});\n\t},\n\n\tfindByName: function( name ){\n\t\t//  returns new array with resutls.\n\t\treturn THREE.AnimationHandler.animations.filter( function(animation){\n\t\t\treturn (animation.data.name == name); // boolean.\n\t\t});\n\t},\n\n\tgetCurrentAction: function(){\n\t\t//  returns current playing action name.\n\t\tfor (var name in this.actions) {\n\t\t\tif ( !name ) return;\n\t\t\tvar action = this.actions[ name ];\n\t\t\tif ( action.isPlaying ) {\n\t\t\t\treturn name;\n\t\t\t}\n\t\t}\n\t},\n\n    //  To stop an animation, find the animation in\n    //  THREE.AnimationHandler.animations and stop it from there.\n\n        stop: function stop(){\n            var self = this;\n            Object.keys( self.actions ).forEach(function(name, i){\n                var action = self.actions[name];\n                self.findAction(action).forEach(function(animation){\n                    animation.stop();\n                });\n            });\n        },\n\n    //  To delete an action, stop the animation in \n    //  THREE.AnimationHandler.animations and then delete it from this.actions.\n\n\tdelete: function( name ){\n\t\tvar action = this.actions[ name ];\n\t\tthis.findAction( action ).forEach(function(animation){\n\t\t\tanimation.stop();\n\t\t});\n\t\tdelete this.actions[ name ];\n\t},\n\n\treset: function reset(){\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tthis.actions[ name ].weight = 1;\n\t\t\tthis.actions[ name ].timeScale = 1;\n\t\t\tthis.actions[ name ].currentTime = 0;\n\t\t}\n\t},\n\n\tresetAll: function(){\n\t\tvar self = this;\n\t\tObject.keys( self.actions ).forEach(function(name, i){\n\t\t\tself.reset( name );\n\t\t});\n\t},\n\n\tdeleteAll: function(){\n\t\tvar self = this;\n\t\tObject.keys( self.actions ).forEach(function(name, i){\n\t\t\tself.delete[ name ]\n\t\t});\n\t},\n\n\tplay: function play(){\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tif ( !this.actions[ name ] ) return;\n\t\t\tthis.actions[ name ].play(0);\n\t\t}\n\t},\n\n    //  To pause an animation, find the animation \n    //  in THREE.AnimationHandler.animations and set timeScale to 0.\n    \n\tpause: function pause(){\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tvar action = this.actions[ name ];\n\t\t\tthis.findAction( action ).forEach(function(animation){\n\t\t\t\tanimation.timeScale = 0;\n\t\t\t});\n\t\t}\n\t},\n\n    //  To unpause an animation, find the animation \n    //  in THREE.AnimationHandler.animations and set timeScale to 1.\n\n\tcontinue: function(){\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tvar action = this.actions[ name ];\n\t\t\tthis.findAction( action ).forEach(function(animation){\n\t\t\t\tanimation.timeScale = 1;\n\t\t\t});\n\t\t}\n\t},\n\n\tweightOff: function(){\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tvar action = this.actions[ name ];\n\t\t\tthis.findAction( action ).forEach(function(animation){\n\t\t\t\tanimation.weight = 0;\n\t\t\t});\n\t\t}\n\t},\n\n\tweightOn: function(){\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tvar action = this.actions[ name ];\n\t\t\tthis.findAction( action ).forEach(function(animation){\n\t\t\t\tanimation.weight = 1;\n\t\t\t});\n\t\t}\n\t},\n\n\tfadeIn: function(){\n\t\tvar fades = [];\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tvar animation = this.actions[ name ];\n\t\t\tfades.push(function fade(){\n\t\t\t\tvar requestId = requestAnimationFrame( fade );\n\t\t\t\tanimation.timeScale = 1; // !important\n\t\t\t\tanimation.weight += ( 0.05 * (1 - animation.weight) );\n\t\t\t\tanimation.play(animation.currentTime, animation.weight);\n\t\t\t\tdebugMode && console.log( \"fadeIn: \", round(animation.weight, 3) );\n\t\t\t\tif ( round(animation.weight, 3) > 0.9 ){\n\t\t\t\t\tcancelAnimationFrame( requestId );\n\t\t\t\t\tanimation.weight = 1;\n\t\t\t\t\tanimation.timeScale = 1;\n\t\t\t\t\tanimation.play(animation.currentTime, 1);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t//  Call all functions in fades.\n\t\twhile (fades.length){ \n\t\t\tfades.shift().call(); \n\t\t}\n\t},\n\n\tfadeOut: function(){\n\t\tvar fades = [];\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tvar action = this.actions[ name ];\n\t\t\tthis.findAction( action ).forEach(function(animation){\n\t\t\t\tfades.push(function fade(){\n\t\t\t\t\tvar requestId = requestAnimationFrame( fade );\n\t\t\t\t\tanimation.timeScale = 1; // !important\n\t\t\t\t\tanimation.weight -= ( 0.05 * animation.weight );\n\t\t\t\t\tanimation.play(animation.currentTime, animation.weight);\n\t\t\t\t\tdebugMode && console.log( \"fadeOut:\", round(animation.weight, 3) );\n\t\t\t\t\tif ( round(animation.weight, 3) < 0.1 ){\n\t\t\t\t\t\tcancelAnimationFrame( requestId );\n\t\t\t\t\t\tanimation.stop();\n\t\t\t\t\t\tanimation.weight = 1;\n\t\t\t\t\t\tanimation.timeScale = 1;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\t//  Call all functions in fades.\n\t\twhile (fades.length){ \n\t\t\tfades.shift().call(); \n\t\t}\n\t},\n\n\tidle: function idle(){\n\t\tthis.actions.idle.play(0);\n\t},\n\n\tjump: function jump(){\n\t\tthis.actions.jump.play(0);\n\t},\n\n\trun: function run(){\n\t\tthis.actions.run.play(0);\n\t},\n\n\twalk: function walk(){\n\t\tthis.actions.walk.play(0);\n\t},\n\n    //  ------------------------------------------------------  //\n    //  This create the animations of skinned mesh. important!  //\n    //  ------------------------------------------------------  //\n\n\tloadAction: function(){\n\n\t\tfor ( var i in arguments ) {\n\n\t\t\tvar name = arguments[i];\n\n\t\t\tvar data;\n\n\t\t\tswitch (this.gender) {\n\n\t\t\t\tcase \"male\":\n\t\t\t\t\tdata = MaleAnimations[ name ];\n\t\t\t\tbreak;\n\n\t\t\t\tcase \"female\":\n\t\t\t\t\tdata = FemaleAnimations[ name ];\n\t\t\t\tbreak;\n\n\t\t\t\tcase \"shemale\":\n\t\t\t\t\tdata = FemaleAnimations[ name ];\n\t\t\t\tbreak;\n\n\t\t\t\tcase \"trans\":\n\t\t\t\t\tdata = FemaleAnimations[ name ];\n\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tdata = Animations[ name ];\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tvar action = new THREE.Animation( this.mesh, data );\n\t\t\taction.uuid = THREE.Math.generateUUID();\n\t\t\taction.weight = 1;\n\t\t\taction.timeScale = 1;\n\t\t\taction.currentTime = 0;\n\t\t\tthis.actions[ name ] = action;\n\t\t}\n\n\t},\n\n\treloadActions: function(){\n\n\t\tvar self = this;\n\n\t\tthis.stop();\n\t\tthis.deleteAll();\n\t\tthis.actions = {};\n\n\t\tif (this.actions.jump) this.actions.jump.loop = false;\n\n\t\tif (MaleAnimations && this.gender && this.gender == \"male\") {\n\t\t\tObject.keys( MaleAnimations ).forEach(function(name, i){\n\t\t\t\tself.loadAction( name );\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (MaleAnimations && this.gender && this.gender == \"shemale\") {\n\t\t\tObject.keys( MaleAnimations ).forEach(function(name, i){\n\t\t\t\tself.loadAction( name );\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (FemaleAnimations && this.gender && this.gender == \"female\") {\n\t\t\tObject.keys( FemaleAnimations ).forEach(function(name, i){\n\t\t\t\tself.loadAction( name );\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (FemaleAnimations && this.gender && this.gender == \"trans\") {\n\t\t\tObject.keys( FemaleAnimations ).forEach(function(name, i){\n\t\t\t\tself.loadAction( name );\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\tif ( Animations && !this.gender ) {\n\t\t\tObject.keys( Animations ).forEach(function(name, i){\n\t\t\t\tself.loadAction( name );\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.gender \n\t\t\t&& this.gender != \"male\" && this.gender != \"female\" \n\t\t\t&& this.gender != \"shemale\" && this.gender != \"trans\" \n\t\t){\n\n\t\t\tconsole.warn( \"AW3D.AnimationHandler: reloadActions(\" + this.gender \n\t\t\t\t+ \"): Gender exists but is not male, female, shemale or trans.\"\n\t\t\t);\n\n\t\t\treturn;\n\t\t}\n\n\t},\n\n};\n"
			},
			{
				"name": "side-panel.js",
				"source": "sidePanel = document.createElement(\"div\");\nsidePanel.id = \"right-side\";\nsidePanel.classList.add(\"side-panel\");\nsidePanel.style.cssText = \"position:absolute;top:0;right:0;bottom:0;width:370px;color:#eee;background:rgba(0,0,0,0.4); \"\n\t\t+ \"-webkit-transform:translateX( 340px ); -webkit-transition:-webkit-transform 500ms ease-out; z-index:9999;\";\n\nvar container = document.createElement(\"div\");\ncontainer.id = \"side-panel-content\";\ncontainer.style.cssText = \"position:absolute;top:40px;left:40px;bottom:20px;right:20px;overflow-x:hidden;\";\n\nvar sidePillBar = document.createElement(\"div\");\nsidePillBar.id = \"side-pill-bar\";\nsidePillBar.classList.add(\"side-holder\");\nsidePillBar.style.cssText = \"margin-bottom:20px;\";\ncontainer.appendChild( sidePillBar );\n\nvar sideTabPills = document.createElement(\"ul\");\nsideTabPills.id = \"side-tab-pills\";\nsideTabPills.classList.add(\"nav\",\"nav-tabs\",\"nav-pills\");\nsideTabPills.style.cssText = \"display:inline-flex!important;overflow-y:hidden;width:300px;scroll-behavior:smooth;\";\nsidePillBar.appendChild( sideTabPills );\n\nvar sideTabPanel = document.createElement(\"div\");\nsideTabPanel.id = \"side-tab-panel\";\nsideTabPanel.classList.add(\"tab-content\");\ncontainer.appendChild( sideTabPanel );\n\nsidePanel.addEventListener( \"mouseenter\", function(){\n\tthis.classList.toggle( \"pinned\", true );\n\tthis.style[\"-webkit-transform\"] = \"translateX( 0 )\";\n});\n\nsidePanel.addEventListener( \"mouseleave\", function(){\n\tthis.classList.toggle( \"pinned\", false );\n\tthis.style[\"-webkit-transform\"] = \"translateX( 340px )\";\n});\n\nsidePanel.appendChild( container );\napp.dom.appendChild( sidePanel );\n\n\naddTab = function(label, id){\n\n\tvar role, pill, tab;\n\tconst sideTabPills = document.getElementById(\"side-tab-pills\");\n\tconst sideTabPanel = document.getElementById(\"side-tab-panel\");\n\n\trole = document.createElement(\"li\");\n\trole.setAttribute(\"role\", \"presentation\");\n\trole.style.display = \"inline-block\";\n\n\tpill = document.createElement(\"a\");\n\tpill.href = \"#\"+id; // important!\n\tpill.setAttribute(\"data-toggle\", \"pill\");\n\tpill.classList.add(\"pills\",\"right-pill\",\"right-pill-avatar\");\n\tpill.innerHTML = label;\n\trole.appendChild( pill );\n\n\ttab = document.createElement(\"li\");\n\ttab.id = id; // important!\n\ttab.classList.add(\"component-pane\",\"tab-pane\",\"fade\");\n\n\tsideTabPanel.appendChild( tab );\n\tsideTabPills.appendChild( role );\n\t\n\treturn tab;\n\n}\n\n"
			},
			{
				"name": "body-slot.js",
				"source": "body = {};\nbody.placeholder = \"body\";\n\nbody.key = \"body\";\nbody.getKey = function(){\n\treturn this.key;\n};\n\n//\tGENDERS.\n\nbody.male = [];\nbody.trans = [];\nbody.female = [];\nbody.shemale = [];\nbody.skeleton = [];\n\n//\tINDEXES.\n\nbody.male.index = 0;\nbody.trans.index = 0;\nbody.female.index = 0;\nbody.shemale.index = 0;\nbody.skeleton.index = 0;\n\n//\tMALE.\n\nbody.male.max = _max;\nbody.male.getIndex = _get_index;\nbody.male.get = _get; \nbody.male.getName = _get_name;\nbody.male.getObject = _get_object;\nbody.male.setIndex = _set_index;\nbody.male.set = _set;\nbody.male.reset = _reset;\nbody.male.decrease = _decrease;\nbody.male.increase = _increase;\nbody.male.update = _update;\nbody.male.bones = [\n\n\t{\"name\":\"0.Hips\",\"rotq\":[0,0,0,1],\"pos\":[-0.000027,18.2131,0.000197],\"parent\":-1},\n\t{\"name\":\"1.LHipJoint\",\"rotq\":[0,0,0,1],\"pos\":[0.000027,0.055037,0.000009],\"parent\":0},\n\t{\"name\":\"2.LeftUpLeg\",\"rotq\":[0,0,0,1],\"pos\":[1.54938,-2.41555,0.04113],\"parent\":1},\n\t{\"name\":\"3.LeftLeg\",\"rotq\":[0,0,0,1],\"pos\":[-0.019988,-7.21534,-0.208633],\"parent\":2},\n\t{\"name\":\"4.LeftFoot\",\"rotq\":[0,0,0,1],\"pos\":[0.320012,-7.29465,-0.471353],\"parent\":3},\n\t{\"name\":\"5.LeftToeBase\",\"rotq\":[0,0,0,1],\"pos\":[0.198471,-0.54529,2.28466],\"parent\":4},\n\t{\"name\":\"6.RHipJoint\",\"rotq\":[0,0,0,1],\"pos\":[0.000027,0.055037,0.000009],\"parent\":0},\n\t{\"name\":\"7.RightUpLeg\",\"rotq\":[0,0,0,1],\"pos\":[-1.43938,-2.41556,0.041129],\"parent\":6},\n\t{\"name\":\"8.RightLeg\",\"rotq\":[0,0,0,1],\"pos\":[-0.08999,-7.21534,-0.208642],\"parent\":7},\n\t{\"name\":\"9.RightFoot\",\"rotq\":[0,0,0,1],\"pos\":[-0.31999,-7.29467,-0.471362],\"parent\":8},\n\t{\"name\":\"10.RightToeBase\",\"rotq\":[0,0,0,1],\"pos\":[-0.305358,-0.83898,2.28801],\"parent\":9},\n\t{\"name\":\"11.LowerBack\",\"rotq\":[0,0,0,1],\"pos\":[0.000027,0.055037,0.000009],\"parent\":0},\n\t{\"name\":\"12.Spine\",\"rotq\":[0,0,0,1],\"pos\":[-0.04381,1.99522,-0.197985],\"parent\":11},\n\t{\"name\":\"13.Spine1\",\"rotq\":[0,0,0,1],\"pos\":[-0.01959,2.01295,-0.04372],\"parent\":12},\n\t{\"name\":\"14.Neck\",\"rotq\":[0,0,0,1],\"pos\":[0,0,0],\"parent\":13},\n\t{\"name\":\"15.Neck1\",\"rotq\":[0,0,0,1],\"pos\":[0.063054,2.1058,-0.51192],\"parent\":14},\n\t{\"name\":\"16.Head\",\"rotq\":[0,0,0,1],\"pos\":[-0.023034,1.43701,0.497281],\"parent\":15},\n\t{\"name\":\"17.LeftShoulder\",\"rotq\":[0,0,0,1],\"pos\":[0,0,0],\"parent\":14},\n\t{\"name\":\"18.LeftArm\",\"rotq\":[0,0,0,1],\"pos\":[2.59288,1.2264,-0.487197],\"parent\":17},\n\t{\"name\":\"19.LeftForeArm\",\"rotq\":[0,0,0,1],\"pos\":[4.14553,-0.064466,0.257386],\"parent\":18},\n\t{\"name\":\"20.LeftHand\",\"rotq\":[0,0,0,1],\"pos\":[3.69802,0.065802,1.73268],\"parent\":19},\n\t{\"name\":\"21.LeftFingerBase\",\"rotq\":[0,0,0,1],\"pos\":[-0.000254,0,-0.000043],\"parent\":20},\n\t{\"name\":\"22.LeftHandIndex1\",\"rotq\":[0,0,0,1],\"pos\":[0.559672,0,0.260979],\"parent\":21},\n\t{\"name\":\"23.LThumb\",\"rotq\":[0,0,0,1],\"pos\":[-0.000254,0,-0.000043],\"parent\":20},\n\t{\"name\":\"24.RightShoulder\",\"rotq\":[0,0,0,1],\"pos\":[0,0,0],\"parent\":14},\n\t{\"name\":\"25.RightArm\",\"rotq\":[0,0,0,1],\"pos\":[-2.46562,1.22638,-0.487065],\"parent\":24},\n\t{\"name\":\"26.RightForeArm\",\"rotq\":[0,0,0,1],\"pos\":[-4.14558,-0.064367,0.259234],\"parent\":25},\n\t{\"name\":\"27.RightHand\",\"rotq\":[0,0,0,1],\"pos\":[-3.69873,0.066645,1.72989],\"parent\":26},\n\t{\"name\":\"28.RightFingerBase\",\"rotq\":[0,0,0,1],\"pos\":[-0.000058,0,0.000157],\"parent\":27},\n\t{\"name\":\"29.RightHandIndex1\",\"rotq\":[0,0,0,1],\"pos\":[-0.529147,0,0.246746],\"parent\":28},\n\t{\"name\":\"30.RThumb\",\"rotq\":[0,0,0,1],\"pos\":[-0.000058,0,0.000157],\"parent\":27}\n\n];\n\n//\tFEMALE.\n\nbody.female.max = _max;\nbody.female.getIndex = _get_index;\nbody.female.get = _get; \nbody.female.getName = _get_name;\nbody.female.getObject = _get_object;\nbody.female.setIndex = _set_index;\nbody.female.set = _set;\nbody.female.reset = _reset;\nbody.female.decrease = _decrease;\nbody.female.increase = _increase;\nbody.female.update = _update;\nbody.female.bones = [\n\n    {\"name\":\"0.Hips\",\"rotq\":[0,0,0,1],\"pos\":[-0.000027,18.2131,0.000197],\"parent\":-1},\n    {\"name\":\"1.LHipJoint\",\"rotq\":[0,0,0,1],\"pos\":[0.000027,0.055037,0.000009],\"parent\":0},\n    {\"name\":\"2.LeftUpLeg\",\"rotq\":[0,0,0,1],\"pos\":[1.54938,-2.41555,0.04113],\"parent\":1},\n    {\"name\":\"3.LeftLeg\",\"rotq\":[0,0,0,1],\"pos\":[-0.019987,-7.21534,-0.208632],\"parent\":2},\n    {\"name\":\"4.LeftFoot\",\"rotq\":[0,0,0,1],\"pos\":[0.320013,-7.48298,-0.061477],\"parent\":3},\n    {\"name\":\"5.LeftToeBase\",\"rotq\":[0,0,0,1],\"pos\":[0.198471,-2.15676,0.939379],\"parent\":4},\n    {\"name\":\"6.RHipJoint\",\"rotq\":[0,0,0,1],\"pos\":[0.000027,0.055037,0.000009],\"parent\":0},\n    {\"name\":\"7.RightUpLeg\",\"rotq\":[0,0,0,1],\"pos\":[-1.43938,-2.41556,0.041129],\"parent\":6},\n    {\"name\":\"8.RightLeg\",\"rotq\":[0,0,0,1],\"pos\":[-0.089991,-7.21534,-0.208641],\"parent\":7},\n    {\"name\":\"9.RightFoot\",\"rotq\":[0,0,0,1],\"pos\":[-0.319991,-7.48299,-0.061486],\"parent\":8},\n    {\"name\":\"10.RightToeBase\",\"rotq\":[0,0,0,1],\"pos\":[-0.198638,-2.15723,0.936529],\"parent\":9},\n    {\"name\":\"11.LowerBack\",\"rotq\":[0,0,0,1],\"pos\":[0.000027,0.055037,0.000009],\"parent\":0},\n    {\"name\":\"12.Spine\",\"rotq\":[0,0,0,1],\"pos\":[-0.04381,1.99522,-0.197985],\"parent\":11},\n    {\"name\":\"13.Spine1\",\"rotq\":[0,0,0,1],\"pos\":[-0.01959,2.01295,-0.04372],\"parent\":12},\n    {\"name\":\"14.Neck\",\"rotq\":[0,0,0,1],\"pos\":[0,0,0],\"parent\":13},\n    {\"name\":\"15.Neck1\",\"rotq\":[0,0,0,1],\"pos\":[0.063054,2.1058,-0.51192],\"parent\":14},\n    {\"name\":\"16.Head\",\"rotq\":[0,0,0,1],\"pos\":[-0.023034,1.43701,0.497281],\"parent\":15},\n    {\"name\":\"17.LeftShoulder\",\"rotq\":[0,0,0,1],\"pos\":[0,0,0],\"parent\":14},\n    {\"name\":\"18.LeftArm\",\"rotq\":[0,0,0,1],\"pos\":[2.59288,1.2264,-0.487197],\"parent\":17},\n    {\"name\":\"19.LeftForeArm\",\"rotq\":[0,0,0,1],\"pos\":[4.14553,-0.064466,0.257386],\"parent\":18},\n    {\"name\":\"20.LeftHand\",\"rotq\":[0,0,0,1],\"pos\":[3.69802,0.065802,1.73268],\"parent\":19},\n    {\"name\":\"21.LeftFingerBase\",\"rotq\":[0,0,0,1],\"pos\":[-0.000254,0,-0.000043],\"parent\":20},\n    {\"name\":\"22.LeftHandIndex1\",\"rotq\":[0,0,0,1],\"pos\":[0.559672,0,0.260979],\"parent\":21},\n    {\"name\":\"23.LThumb\",\"rotq\":[0,0,0,1],\"pos\":[-0.000254,0,-0.000043],\"parent\":20},\n    {\"name\":\"24.RightShoulder\",\"rotq\":[0,0,0,1],\"pos\":[0,0,0],\"parent\":14},\n    {\"name\":\"25.RightArm\",\"rotq\":[0,0,0,1],\"pos\":[-2.46562,1.22638,-0.487065],\"parent\":24},\n    {\"name\":\"26.RightForeArm\",\"rotq\":[0,0,0,1],\"pos\":[-4.14558,-0.064367,0.259234],\"parent\":25},\n    {\"name\":\"27.RightHand\",\"rotq\":[0,0,0,1],\"pos\":[-3.69873,0.066645,1.72989],\"parent\":26},\n    {\"name\":\"28.RightFingerBase\",\"rotq\":[0,0,0,1],\"pos\":[-0.000059,0,0.000157],\"parent\":27},\n    {\"name\":\"29.RightHandIndex1\",\"rotq\":[0,0,0,1],\"pos\":[-0.529147,0,0.246746],\"parent\":28},\n    {\"name\":\"30.RThumb\",\"rotq\":[0,0,0,1],\"pos\":[-0.000059,0,0.000157],\"parent\":27}\n\n];\n\n\n//\tSKELETON.\n\nbody.skeleton.max = _max;\nbody.skeleton.getIndex = _get_index;\nbody.skeleton.get = _get; \nbody.skeleton.getName = _get_name;\nbody.skeleton.getObject = _get_object;\nbody.skeleton.setIndex = _set_index;\nbody.skeleton.set = _set;\nbody.skeleton.reset = _reset;\nbody.skeleton.decrease = _decrease;\nbody.skeleton.increase = _increase;\nbody.skeleton.update = _update;\nbody.skeleton.bones = [\n\n\t{\"name\":\"Hips\",\"rotq\":[0,0,0,1],\"pos\":[-0.000027,18.2131,0.000197],\"parent\":-1},\n\t{\"name\":\"1.LHipJoint\",\"rotq\":[0,0,0,1],\"pos\":[0.000027,0.055037,0.000009],\"parent\":0},\n\t{\"name\":\"2.LeftUpLeg\",\"rotq\":[0,0,0,1],\"pos\":[1.54938,-2.41555,0.04113],\"parent\":1},\n\t{\"name\":\"3.LeftLeg\",\"rotq\":[0,0,0,1],\"pos\":[-0.019988,-7.21534,-0.208633],\"parent\":2},\n\t{\"name\":\"4.LeftFoot\",\"rotq\":[0,0,0,1],\"pos\":[0.320012,-7.29465,-0.471353],\"parent\":3},\n\t{\"name\":\"5.LeftToeBase\",\"rotq\":[0,0,0,1],\"pos\":[0.198471,-0.54529,2.28466],\"parent\":4},\n\t{\"name\":\"6.RHipJoint\",\"rotq\":[0,0,0,1],\"pos\":[0.000027,0.055037,0.000009],\"parent\":0},\n\t{\"name\":\"7.RightUpLeg\",\"rotq\":[0,0,0,1],\"pos\":[-1.43938,-2.41556,0.041129],\"parent\":6},\n\t{\"name\":\"8.RightLeg\",\"rotq\":[0,0,0,1],\"pos\":[-0.08999,-7.21534,-0.208642],\"parent\":7},\n\t{\"name\":\"9.RightFoot\",\"rotq\":[0,0,0,1],\"pos\":[-0.31999,-7.29467,-0.471362],\"parent\":8},\n\t{\"name\":\"10.RightToeBase\",\"rotq\":[0,0,0,1],\"pos\":[-0.305358,-0.83898,2.28801],\"parent\":9},\n\t{\"name\":\"11.LowerBack\",\"rotq\":[0,0,0,1],\"pos\":[0.000027,0.055037,0.000009],\"parent\":0},\n\t{\"name\":\"12.Spine\",\"rotq\":[0,0,0,1],\"pos\":[-0.04381,1.99522,-0.197985],\"parent\":11},\n\t{\"name\":\"13.Spine1\",\"rotq\":[0,0,0,1],\"pos\":[-0.01959,2.01295,-0.04372],\"parent\":12},\n\t{\"name\":\"14.Neck\",\"rotq\":[0,0,0,1],\"pos\":[0,0,0],\"parent\":13},\n\t{\"name\":\"15.Neck1\",\"rotq\":[0,0,0,1],\"pos\":[0.063054,2.1058,-0.51192],\"parent\":14},\n\t{\"name\":\"16.Head\",\"rotq\":[0,0,0,1],\"pos\":[-0.023034,1.43701,0.497281],\"parent\":15},\n\t{\"name\":\"17.LeftShoulder\",\"rotq\":[0,0,0,1],\"pos\":[0,0,0],\"parent\":14},\n\t{\"name\":\"18.LeftArm\",\"rotq\":[0,0,0,1],\"pos\":[2.59288,1.2264,-0.487197],\"parent\":17},\n\t{\"name\":\"19.LeftForeArm\",\"rotq\":[0,0,0,1],\"pos\":[4.14553,-0.064466,0.257386],\"parent\":18},\n\t{\"name\":\"20.LeftHand\",\"rotq\":[0,0,0,1],\"pos\":[3.69802,0.065802,1.73268],\"parent\":19},\n\t{\"name\":\"21.LeftFingerBase\",\"rotq\":[0,0,0,1],\"pos\":[-0.000254,0,-0.000043],\"parent\":20},\n\t{\"name\":\"22.LeftHandIndex1\",\"rotq\":[0,0,0,1],\"pos\":[0.559672,0,0.260979],\"parent\":21},\n\t{\"name\":\"23.LThumb\",\"rotq\":[0,0,0,1],\"pos\":[-0.000254,0,-0.000043],\"parent\":20},\n\t{\"name\":\"24.RightShoulder\",\"rotq\":[0,0,0,1],\"pos\":[0,0,0],\"parent\":14},\n\t{\"name\":\"25.RightArm\",\"rotq\":[0,0,0,1],\"pos\":[-2.46562,1.22638,-0.487065],\"parent\":24},\n\t{\"name\":\"26.RightForeArm\",\"rotq\":[0,0,0,1],\"pos\":[-4.14558,-0.064367,0.259234],\"parent\":25},\n\t{\"name\":\"27.RightHand\",\"rotq\":[0,0,0,1],\"pos\":[-3.69873,0.066645,1.72989],\"parent\":26},\n\t{\"name\":\"28.RightFingerBase\",\"rotq\":[0,0,0,1],\"pos\":[-0.000058,0,0.000157],\"parent\":27},\n\t{\"name\":\"29.RightHandIndex1\",\"rotq\":[0,0,0,1],\"pos\":[-0.529147,0,0.246746],\"parent\":28},\n\t{\"name\":\"30.RThumb\",\"rotq\":[0,0,0,1],\"pos\":[-0.000058,0,0.000157],\"parent\":27}\n\n];\n\n\n//\tSHEMALE.\n\nbody.shemale.max = _max;\nbody.shemale.getIndex = _get_index;\nbody.shemale.get = _get; \nbody.shemale.getName = _get_name;\nbody.shemale.getObject = _get_object;\nbody.shemale.setIndex = _set_index;\nbody.shemale.set = _set;\nbody.shemale.reset = _reset;\nbody.shemale.decrease = _decrease;\nbody.shemale.increase = _increase;\nbody.shemale.update = _update;\nbody.shemale.bones = body.female.bones\n\n//\tTRANSEXUAL.\n\nbody.trans.max = _max;\nbody.trans.getIndex = _get_index;\nbody.trans.get = _get; \nbody.trans.getName = _get_name;\nbody.trans.getObject = _get_object;\nbody.trans.setIndex = _set_index;\nbody.trans.set = _set;\nbody.trans.reset = _reset;\nbody.trans.decrease = _decrease;\nbody.trans.increase = _increase;\nbody.trans.update = _update;\nbody.trans.bones = body.female.bones\n\n//\n\nfunction _max(){\n\treturn this.length - 1;\n};\n\nfunction _get_index(){\n\treturn this.index;\n};\n\nfunction _get(){\n\treturn this[ this.getIndex() ] || null;\n};\n\nfunction _get_name(){\n\treturn ( this.get() && this.get().name ) || \"\";\n};\n\nfunction _get_object(){\n\treturn {\"body\": this.get()};\n};\n\nfunction _set_index(i){\n\n\tvar i = parseInt(i);\n\n\tif ( isNaN(i) )\n\t\tthis.index = 0; \n\telse if ( i < 0 ) \n\t\tthis.index = 0;\n\telse if ( i > max)\n\t\tthis.index = max;\n\telse \n\t\tthis.index = i;\n\n\treturn this;\n};\n\nfunction _set( mesh ){\n\n\tif ( !mesh.type ) return null;\n\tif ( mesh.type != \"SkinnedMesh\" ) return null;\n\n\tvar index = this.findIndex(function(item){\n\t\treturn item.uuid == mesh.uuid;\n\t});\n\n\tif ( index < 0 ) {\n\t\tthis.push( mesh );\n\t\tthis.setIndex( this.max() );\n\t} else {\n\t\tthis.setIndex( index );\n\t}\n\n\treturn this.getIndex();\n};\n\nfunction _reset(){\n\treturn this.setIndex().getIndex();\n};\n\nfunction _decrease(){\n\n\tif ( this.getIndex() < 1 ) \n\t\tthis.index = this.max();\n\telse\n\t\tthis.index -= 1;\n\treturn this.getIndex();\n};\n\nfunction _increase(){\n\n// \tvar max = this.length - 2;\n\tvar max = this.max() - 1;\n\n\tif (this.index > max ) \n\t\tthis.reset();\n\telse\n\t\tthis.index += 1;\n\n\treturn this.getIndex();\n};\n\n//\t\"body[gender]\" is an array and it have \n//\tnative \".find\" and \".findIndex\" methods.\n\nfunction _update(){\n\n\tvar index = this.findIndex(function(item){\n\t\treturn item.uuid == localPlayer.outfit.body.uuid;\n\t});\n\n\tif ( index > this.max() ) {\n\t\tthrow \"Fatal Error: Index out of index range!\";\n\t}\n\n\tif ( index < 0 ) \n\t\tthis.reset();\n\telse \n\t\tthis.setIndex( index );\n\n\treturn this.getIndex();\n\n};\n"
			},
			{
				"name": "outfit-slot.js",
				"source": "eyes = new OutfitSlot(\"eyes\", \"eyes\"); // eyes.\nhairs = new OutfitSlot(\"hairs\", \"hairs\"); // head.\nstockings = new OutfitSlot(\"stockings\", \"legs\"); // legs.\nunderwears = new OutfitSlot(\"underwears\", \"underwears\"); // fullbody.\nupperbody = new OutfitSlot(\"tshirt\", \"upperbody\"); // upperbody.\nlowerbody = new OutfitSlot(\"trousers\", \"lowerbody\"); // lowerbody.\nfullbody = new OutfitSlot(\"costume\", \"fullbody\"); // fullbody.\nshoes = new OutfitSlot(\"shoes\", \"feet\"); // feet.\n//\tdress = new OutfitSlot(\"costume\", \"dress\"); // use (fullbody) costume slot.\n\n//\tmale initial indexes.\n\neyes.male.index = 1;\nhairs.male.index = 1;\nshoes.male.index = 1;\n\n//\tfemale initial indexes.\n\neyes.female.index = 1;\nhairs.female.index = 1;\nshoes.female.index = 1;\n\n//\tshemale initial indexes.\n\neyes.shemale.index = 1;\nhairs.shemale.index = 1;\nshoes.shemale.index = 1;\n\n//\ttrans initial indexes.\n\neyes.trans.index = 1;\nhairs.trans.index = 1;\nshoes.trans.index = 1;\n\nfunction OutfitSlot( key, name ){\n\n\tvar slot = {};\n\tslot.placeholder = name;\n\n\tslot.key = key;\n\tslot.getKey = function(){\n\t\treturn this.key;\n\t};\n\n//\tGENDERS.\n\n\tslot.male = [null];\n\tslot.female = [null];\n\tslot.shemale = [null];\n\tslot.trans = [null];\n\n//\tINDEXES.\n\n\tslot.male.index = 0;\n\tslot.female.index = 0;\n\tslot.shemale.index = 0;\n\tslot.trans.index = 0;\n\n//\tMALE.\n\n\tslot.male.max = _max;\n\tslot.male.getIndex = _get_index;\n\tslot.male.get = _get; \n\tslot.male.getName = _get_name;\n\tslot.male.getObject = _get_object;\n\tslot.male.setIndex = _set_index;\n\tslot.male.set = _set;\n\tslot.male.reset = _reset;\n\tslot.male.decrease = _decrease;\n\tslot.male.increase = _increase;\n\tslot.male.update = _update;\n\n//\tFEMALE.\n\n\tslot.female.max = _max;\n\tslot.female.getIndex = _get_index;\n\tslot.female.get = _get; \n\tslot.female.getName = _get_name;\n\tslot.female.getObject = _get_object;\n\tslot.female.setIndex = _set_index;\n\tslot.female.set = _set;\n\tslot.female.reset = _reset;\n\tslot.female.decrease = _decrease;\n\tslot.female.increase = _increase;\n\tslot.female.update = _update;\n\n//\tSHEMALE.\n\n\tslot.shemale.max = _max;\n\tslot.shemale.getIndex = _get_index;\n\tslot.shemale.get = _get; \n\tslot.shemale.getName = _get_name;\n\tslot.shemale.getObject = _get_object;\n\tslot.shemale.setIndex = _set_index;\n\tslot.shemale.set = _set;\n\tslot.shemale.reset = _reset;\n\tslot.shemale.decrease = _decrease;\n\tslot.shemale.increase = _increase;\n\tslot.shemale.update = _update;\n\n//\tTRANSEXUAL.\n\n\tslot.trans.max = _max;\n\tslot.trans.getIndex = _get_index;\n\tslot.trans.get = _get; \n\tslot.trans.getName = _get_name;\n\tslot.trans.getObject = _get_object;\n\tslot.trans.setIndex = _set_index;\n\tslot.trans.set = _set;\n\tslot.trans.reset = _reset;\n\tslot.trans.decrease = _decrease;\n\tslot.trans.increase = _increase;\n\tslot.trans.update = _update;\n\n//\tconsole.log\n\n\tdebugMode && console.log( \n\t\t(function(name, slot){\n\t\t\tvar object = {};\n\t\t\tobject[ \"slot \" + name ] = slot;\n\t\t\treturn object;\n\t\t})(name, slot)\n\t);\n\n//\tmethods.\n\n\tfunction _max(){\n\t\treturn this.length - 1;\n\t};\n\n\tfunction _get_index(){\n\t\treturn this.index;\n\t};\n\n\tfunction _get(){\n\t\treturn this[ this.getIndex() ] || null;\n\t};\n\n\tfunction _get_name(){\n\t\treturn ( this.get() && this.get().name ) || \"\";\n\t};\n\n\tfunction _get_object(){\n\t\tvar object = {};\n\t\tobject[ key ] = this.get();\n\t\treturn object;\n\t};\n\n\tfunction _set_index(i){\n\n\t\tvar i = parseInt(i);\n\n\t\tif ( isNaN(i) )\n\t\t\tthis.index = 0; \n\t\telse if ( i < 0 ) \n\t\t\tthis.index = 0;\n\t\telse if ( i > max)\n\t\t\tthis.index = max;\n\t\telse \n\t\t\tthis.index = i;\n\n\t\treturn this;\n\t};\n\n\tfunction _set( mesh ){\n\n\t\tif ( !mesh.type ) return null;\n\t\tif ( mesh.type != \"SkinnedMesh\" ) return null;\n\n\t\tvar index = this.findIndex(function(item){\n\t\t\treturn item.uuid == mesh.uuid;\n\t\t});\n\n\t\tif ( index < 0 ) {\n\t\t\tthis.push( mesh );\n\t\t\tthis.setIndex( this.max() );\n\t\t} else {\n\t\t\tthis.setIndex( index );\n\t\t}\n\n\t\treturn this.getIndex();\n\t};\n\n\tfunction _reset(){\n\t\treturn this.setIndex().getIndex();\n\t};\n\n\tfunction _decrease(){\n\n\t\tif ( this.getIndex() < 1 ) \n\t\t\tthis.index = this.max();\n\t\telse\n\t\t\tthis.index -= 1;\n\t\treturn this.getIndex();\n\t};\n\n\tfunction _increase(){\n\n\t// \tvar max = this.length - 2;\n\t\tvar max = this.max() - 1;\n\n\t\tif (this.index > max ) \n\t\t\tthis.reset();\n\t\telse\n\t\t\tthis.index += 1;\n\n\t\treturn this.getIndex();\n\t};\n\n//\t\"outfit[gender]\" is an array and it have \n//\tnative \".find\" and \".findIndex\" methods.\n\n\tfunction _update(){\n\n\t\tvar index = this.findIndex(function(item){\n\t\t\treturn item.uuid == localPlayer.outfit[ this.key ].uuid;\n\t\t});\n\n\t\tif ( index > this.max() ) {\n\t\t\tthrow \"Fatal Error: Index out of index range!\";\n\t\t}\n\n\t\tif ( index < 0 ) \n\t\t\tthis.reset();\n\t\telse \n\t\t\tthis.setIndex( index );\n\n\t\treturn this.getIndex();\n\n\t};\n\n\treturn slot;\n\n}\n"
			},
			{
				"name": "texture-slot.js",
				"source": "TextureSlot = function( key, name ){\n\n\tvar slot = {};\n\tslot.placeholder = name;\n\n//\tlocalPlayer.outfit[ slot.key ].\n\tslot.key = key; \n\tslot.getKey = function(){\n\t\treturn this.key;\n\t};\n\n//\tGENDERS.\n\n\tslot.male = [null];\n\tslot.female = [null];\n\tslot.shemale = [null];\n\tslot.trans = [null];\n\n//\tINDEXES.\n\n\tslot.male.index = -1;\n\tslot.female.index = -1;\n\tslot.shemale.index = -1;\n\tslot.trans.index = -1;\n\n//\tMALE.\n\n\tslot.male.max = _max;\n\tslot.male.getIndex = _get_index;\n\tslot.male.get = _get; \n\tslot.male.getName = _get_name;\n\tslot.male.setIndex = _set_index;\n\tslot.male.reset = _reset;\n\tslot.male.decrease = _decrease;\n\tslot.male.increase = _increase;\n\n//\tFEMALE.\n\n\tslot.female.max = _max;\n\tslot.female.getIndex = _get_index;\n\tslot.female.get = _get; \n\tslot.female.getName = _get_name;\n\tslot.female.setIndex = _set_index;\n\tslot.female.reset = _reset;\n\tslot.female.decrease = _decrease;\n\tslot.female.increase = _increase;\n\n//\tSHEMALE.\n\n\tslot.shemale.max = _max;\n\tslot.shemale.getIndex = _get_index;\n\tslot.shemale.get = _get; \n\tslot.shemale.getName = _get_name;\n\tslot.shemale.setIndex = _set_index;\n\tslot.shemale.reset = _reset;\n\tslot.shemale.decrease = _decrease;\n\tslot.shemale.increase = _increase;\n\n//\tTRANSEXUAL.\n\n\tslot.trans.max = _max;\n\tslot.trans.getIndex = _get_index;\n\tslot.trans.get = _get; \n\tslot.trans.getName = _get_name;\n\tslot.trans.setIndex = _set_index;\n\tslot.trans.reset = _reset;\n\tslot.trans.decrease = _decrease;\n\tslot.trans.increase = _increase;\n\n//\tconsole.log\n\n\tdebugMode && console.log( \n\t\t(function(name, slot){\n\t\t\tvar object = {};\n\t\t\tobject[ \"texture slot \" + name ] = slot;\n\t\t\treturn object;\n\t\t})(name, slot)\n\t);\n\n//\tmethods.\n\n\tfunction _max(){\n\t\treturn this.length - 1;\n\t};\n\n\tfunction _get_index(){\n\t\treturn this.index;\n\t};\n\n\tfunction _get(){\n\t\treturn this[ this.getIndex() ] || null;\n\t};\n\n\tfunction _get_name(){\n\t\treturn ( this.get() && this.get().name ) || \"\";\n\t};\n\n\tfunction _set_index(i){\n\n\t\tvar i = parseInt(i);\n\n\t\tif ( isNaN(i) )\n\t\t\tthis.index = 0; \n\t\telse if ( i < 0 ) \n\t\t\tthis.index = 0;\n\t\telse if ( i > max)\n\t\t\tthis.index = max;\n\t\telse \n\t\t\tthis.index = i;\n\n\t\treturn this;\n\t};\n\n\tfunction _reset(){\n\t\treturn this.setIndex().getIndex();\n\t};\n\n\tfunction _decrease(){\n\n\t\tif ( this.getIndex() < 1 ) \n\t\t\tthis.index = this.max();\n\t\telse\n\t\t\tthis.index -= 1;\n\t\treturn this.getIndex();\n\t};\n\n\tfunction _increase(){\n\n\t\tvar max = this.max() - 1;\n\t// \tvar max = this.length - 2;\n\n\t\tif (this.index > max ) \n\t\t\tthis.reset();\n\t\telse\n\t\t\tthis.index += 1;\n\n\t\treturn this.getIndex();\n\t};\n\n\treturn slot;\n\n}\n"
			},
			{
				"name": "material--slot.js",
				"source": "MaterialSlot = function( key, name ){\n\n\tvar slot = {};\n\tslot.placeholder = name;\n\n//\tlocalPlayer.outfit[ slot.key ].\n\tslot.key = key;\n\tslot.getKey = function(){\n\t\treturn this.key;\n\t};\n\n//\tGENDERS.\n\n\tslot.male = [];\n\tslot.female = [];\n\tslot.shemale = [];\n\tslot.trans = [];\n\n//\tINDEXES.\n\n\tslot.male.index = -1;\n\tslot.female.index = -1;\n\tslot.shemale.index = -1;\n\tslot.trans.index = -1;\n\n//\tMALE.\n\n\tslot.male.max = _max;\n\tslot.male.getIndex = _get_index;\n\tslot.male.get = _get; \n\tslot.male.getName = _get_name;\n\tslot.male.setIndex = _set_index;\n\tslot.male.reset = _reset;\n\tslot.male.decrease = _decrease;\n\tslot.male.increase = _increase;\n//\tslot.male.update = _update;\n\n//\tFEMALE.\n\n\tslot.female.max = _max;\n\tslot.female.getIndex = _get_index;\n\tslot.female.get = _get; \n\tslot.female.getName = _get_name;\n\tslot.female.setIndex = _set_index;\n\tslot.female.reset = _reset;\n\tslot.female.decrease = _decrease;\n\tslot.female.increase = _increase;\n//\tslot.female.update = _update;\n\n//\tSHEMALE.\n\n\tslot.shemale.max = _max;\n\tslot.shemale.getIndex = _get_index;\n\tslot.shemale.get = _get; \n\tslot.shemale.getName = _get_name;\n\tslot.shemale.setIndex = _set_index;\n\tslot.shemale.reset = _reset;\n\tslot.shemale.decrease = _decrease;\n\tslot.shemale.increase = _increase;\n//\tslot.shemale.update = _update;\n\n//\tTRANSEXUAL.\n\n\tslot.trans.max = _max;\n\tslot.trans.getIndex = _get_index;\n\tslot.trans.get = _get; \n\tslot.trans.getName = _get_name;\n\tslot.trans.setIndex = _set_index;\n\tslot.trans.reset = _reset;\n\tslot.trans.decrease = _decrease;\n\tslot.trans.increase = _increase;\n//\tslot.trans.update = _update;\n\n//\tconsole.log\n\n\tdebugMode && console.log( \n\t\t(function(name, slot){\n\t\t\tvar object = {};\n\t\t\tobject[ \"material slot \" + name ] = slot;\n\t\t\treturn object;\n\t\t})(name, slot)\n\t);\n\n//\tmethods.\n\n\tfunction _max(){\n\t\treturn this.length - 1;\n\t};\n\n\tfunction _get_index(){\n\t\treturn this.index;\n\t};\n\n\tfunction _get(){\n\t\treturn this[ this.getIndex() ] || null;\n\t};\n\n\tfunction _get_name(){\n\t\treturn ( this.get() && this.get().name ) || \"\";\n\t};\n\n\tfunction _set_index(i){\n\n\t\tvar i = parseInt(i);\n\n\t\tif ( isNaN(i) )\n\t\t\tthis.index = 0; \n\t\telse if ( i < 0 ) \n\t\t\tthis.index = 0;\n\t\telse if ( i > max)\n\t\t\tthis.index = max;\n\t\telse \n\t\t\tthis.index = i;\n\n\t\treturn this;\n\t};\n\n\tfunction _reset(){\n\t\treturn this.setIndex().getIndex();\n\t};\n\n\tfunction _decrease(){\n\n\t\tif ( this.getIndex() < 1 ) \n\t\t\tthis.index = this.max();\n\t\telse\n\t\t\tthis.index -= 1;\n\t\treturn this.getIndex();\n\t};\n\n\tfunction _increase(){\n\n\t// \tvar max = this.length - 2;\n\t\tvar max = this.max() - 1;\n\n\t\tif (this.index > max ) \n\t\t\tthis.reset();\n\t\telse\n\t\t\tthis.index += 1;\n\n\t\treturn this.getIndex();\n\t};\n\n\treturn slot;\n\n}\n\n/*\n//\t\"slot[gender]\" is an array and it have \n//\tnative \".find\" and \".findIndex\" methods.\n\n\tfunction _update(){\n\n\t\tvar gender = localPlayer.outfit.getGender();\n\n\t//\tTODO.\n\t\tvar index = this.findIndex(function(item){\n\t\t\treturn item.uuid == tshirt[ gender ][1].material.uuid;\n\t\t});\n\n\t\tif ( index > this.max() ) {\n\t\t\tthrow \"Fatal Error: Index out of index range!\";\n\t\t}\n\n\t\tif ( index < 0 ) \n\t\t\tthis.reset();\n\t\telse \n\t\t\tthis.setIndex( index );\n\n\t\treturn this.getIndex();\n\n\t};\n*/\n"
			},
			{
				"name": "Signals.js",
				"source": "Signal = signals.Signal;\n"
			},
			{
				"name": "Backgrounds",
				"source": "Backgrounds = [];\n\n//\tScene background.\n\nfunction sceneBackground( urls ){\n\tif (!scene || Number(THREE.REVISION) < 78) return;\n\tvar loader = new THREE.CubeTextureLoader();\n\tscene.background = loader.load( urls, function( texture ){\n\t\tscene.background.needsUpdate = true;\n\t});\n\tscene.background && Backgrounds.push( scene.background );\n}\n\nsceneBackground([\n\t\"https://i.imgur.com/v6bjQLb.jpg\", // \"posx.jpg\",\n\t\"https://i.imgur.com/lwrlr6P.jpg\", // \"negx.jpg\", \n\t\"https://i.imgur.com/kKUKBJg.jpg\", // \"posy.jpg\", \n\t\"https://i.imgur.com/N0oZlJR.jpg\", // \"negy.jpg\", \n\t\"https://i.imgur.com/x9q8z0K.jpg\", // \"posz.jpg\", \n\t\"https://i.imgur.com/HYcK7Ii.jpg\", // \"negz.jpg\"\n]);\n\n//\tBackground tab.\n\nvar header = document.createElement(\"h3\");\nheader.textContent = \"Select from Backgrounds:\";\nheader.style.cssText = \"text-align:center;\";\n\nvar viewer = document.createElement(\"div\");\nviewer.style.cssText = \"width:fit-content;height:fit-content;max-width:300px;\"\n\t+ \"max-height:300px;margin:20px auto;border:1px solid;overflow:hidden;\";\n\nvar tab_scene = new THREE.Scene();\nvar tab_camera = new THREE.PerspectiveCamera( 75, 1, 0.1, 50 );\nvar tab_controls = new THREE.EditorControls( tab_camera );\n\ntab_camera.position.z = 25;\n\nvar tab_renderer = new THREE.WebGLRenderer( { antialias: true } );\ntab_renderer.setPixelRatio( 1 );\ntab_renderer.setSize( 256, 256 );\nviewer.appendChild( tab_renderer.domElement );\n\nsetTimeout( function(){\n\n\tvar tab = addTab( \"Background\", \"background-tab\" );\n\n\ttab.appendChild( viewer );\n\ttab.appendChild( header );\n\ttab.appendChild( new SelectBackgroundUI() );\n\n\t(function render() {\n\n\t\trequestAnimationFrame( render );\n\n\t\ttab_renderer.render( tab_scene, tab_camera );\n\n\t})();\n\n//\ttab_scene.background = scene.background;\n//\ttab_scene.background.needsUpdate = true;\n\n});\n\nfunction SelectBackgroundUI(){\n\n\tvar interval, old_background;\n\n\tvar row = document.createElement(\"div\");\n\trow.style.cssText = \"margin:10px 10px;height:35px;text-align:center;\";\n\n\tvar prev = document.createElement(\"li\");\n\tprev.innerHTML = \"&#9668;\";\n\tprev.style.display = \"inline\";\n\tprev.classList.add(\"btn\",\"btn-primary\",\"get-prev-btn\",\"pull-left\");\n\n\tvar next = document.createElement(\"li\");\n\tnext.innerHTML = \"&#9658;\";\n\tnext.style.display = \"inline\";\n\tnext.classList.add(\"btn\",\"btn-primary\",\"get-next-btn\",\"pull-right\");\n\n\tvar input = document.createElement(\"input\");\n\n\tinput.id = \"background-select-ui\";\n\tinput.type = \"text\";\n\tinput.style.color = \"#fff\";\n\tinput.style.border = \"none\";\n\tinput.style.display = \"inline\";\n\tinput.style.maxWidth = \"65%\";\n\tinput.style.fontSize = \"large\";\n\tinput.style.fontWeight = \"bold\";\n\tinput.style.background = \"none\";\n\tinput.setAttribute(\"disabled\", true);\n\tinput.setAttribute(\"placeholder\", \"background\" );\n\tinput.classList.add(\"form-control\",\"text-center\");\n\n\tvar index = 0; // important!\n\tvar values = Backgrounds.map(function( texture ){\n\t\treturn texture.name;\n\t});\n\n\t\n\tinput.getIndex = function(){\n\t\treturn index;\n\t};\n\n\tinput.updateValues = function(){\n\t\tvalues = Backgrounds.map(function( texture ){\n\t\t\treturn (texture && texture.name) || (texture && texture.uuid) || \"\";\n\t\t});\n\t};\n\n\tinput.reset = function (){\n\t\tindex = 0;\n\t\tinput.update();\n\t};\n\n\tinput.decrease = function(){\n\n\t\tvar max = values.length - 1;\n\n\t\tif ( index < 1 ) \n\t\t\tindex = max;\n\t\telse\n\t\t\tindex -= 1;\n\n\t\tinput.value = values[ index ];\n\t};\n\n\tinput.increase = function(){\n\n\t\tvar limit = values.length - 2;\n\n\t\tif ( index > limit ) \n\t\t\tindex = 0;\n\t\telse\n\t\t\tindex += 1;\n\n\t\tinput.value = values[ index ];\n\t};\n\n\n\tinput.update = function(){\n\n\t\tdebugMode && console.log( \"update\" );\n\n\t//\tUpdate values.\n\t\tinput.updateValues();\n\n\t//\tUpdate value.\n\t\tinput.value = values[ index ];\n\n\t//\tUpdate viewer.\n\t\ttab_scene.background = scene.background = Backgrounds[ index ];\n\n\t//\tDispose old background.\n\t\told_background && old_background.dispose && old_background.dispose();\n\n\t//\tRestore store background event linsteners.\n\t\tprev.addEventListener(\"mouseup\", storeOldBackground);\n\t\tnext.addEventListener(\"mouseup\", storeOldBackground);\n\n\t};\n\n//\tEvent handlers.\n\n\tprev.addEventListener(\"click\", descendHandler);\n\tnext.addEventListener(\"click\", increaseHandler);\n\n\tfunction descendHandler(){\n\t\tclearTimeout( interval );\n\t\tinput.decrease();\n\t\tinterval = setTimeout( input.update, 250 );\n\n\t}\n\n\tfunction increaseHandler(){\n\t\tclearTimeout( interval );\n\t\tinput.increase();\n\t\tinterval = setTimeout( input.update, 250 );\n\t}\n\n\tprev.addEventListener(\"mouseup\", storeOldBackground);\n\tnext.addEventListener(\"mouseup\", storeOldBackground);\n\n\tfunction storeOldBackground(){\n\t\told_background = scene.background;\n\t\tdebugMode && console.log( old_background );\n\n\t\tprev.removeEventListener(\"mouseup\", storeOldBackground);\n\t\tnext.removeEventListener(\"mouseup\", storeOldBackground);\n\t}\n\n\trow.appendChild(prev);\n\trow.appendChild(input);\n\trow.appendChild(next);\n\n\tinput.reset();\n\n\treturn row;\n\n}\n\n"
			},
			{
				"name": "",
				"source": ""
			},
			{
				"name": "",
				"source": "function update( event ) {}"
			},
			{
				"name": "",
				"source": "function update( event ) {}"
			},
			{
				"name": "",
				"source": "function update( event ) {}"
			},
			{
				"name": "",
				"source": "function update( event ) {}"
			}]
	},
	"camera": {
		"metadata": {
			"version": 4.4,
			"type": "Object",
			"generator": "Object3D.toJSON"
		},
		"object": {
			"uuid": "1637F180-0E3C-4825-8595-ED30A8D33F34",
			"type": "PerspectiveCamera",
			"name": "Camera",
			"matrix": [-0.8302755355834961,-4.966284716800828e-9,-0.5573531985282898,0,-0.18578439950942993,0.9428090453147888,0.27675849199295044,0,0.5254775881767273,0.3333333432674408,-0.782791256904602,0,15.764328002929688,10,-23.48373794555664,1],
			"fov": 50,
			"zoom": 1,
			"near": 0.1,
			"far": 10000,
			"focus": 10,
			"aspect": 1.937799043062201,
			"filmGauge": 35,
			"filmOffset": 0
		}
	},
	"scene": {
		"metadata": {
			"version": 4.4,
			"type": "Object",
			"generator": "Object3D.toJSON"
		},
		"object": {
			"uuid": "3020AE50-A7A0-4AAE-91A5-6C5821F68FC1",
			"type": "Scene",
			"name": "Scene",
			"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]
		}
	}
}